<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.lx.benefits.mapper.jd.JdAccessTokenMapper">
  <resultMap id="BaseResultMap" type="com.lx.benefits.bean.dto.jd.token.JdAccessToken">
    <id column="id" jdbcType="BIGINT" property="id" />
    <result column="access_token" jdbcType="VARCHAR" property="accessToken" />
    <result column="refresh_token" jdbcType="VARCHAR" property="refreshToken" />
    <result column="get_time" jdbcType="TIMESTAMP" property="getTime" />
    <result column="expires_in" jdbcType="BIGINT" property="expiresIn" />
    <result column="refresh_token_expires" jdbcType="BIGINT" property="refreshTokenExpires" />
    <result column="uid" jdbcType="VARCHAR" property="uid" />
    <result column="create_time" jdbcType="TIMESTAMP" property="createTime" />
    <result column="update_time" jdbcType="TIMESTAMP" property="updateTime" />
    <result column="create_user" jdbcType="VARCHAR" property="createUser" />
    <result column="update_user" jdbcType="VARCHAR" property="updateUser" />
    <result column="remark" jdbcType="VARCHAR" property="remark" />
  </resultMap>
  <sql id="Base_Column_List">
    id, access_token, refresh_token, get_time, expires_in, refresh_token_expires, uid, 
    create_time, update_time, create_user, update_user, remark
  </sql>
  <select id="getToken"  resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from ent_jd_access_token
    order BY id DESC
    limit 0,1
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
    delete from ent_jd_access_token
    where id = #{id,jdbcType=BIGINT}
  </delete>
  <!--<insert id="insert" parameterType="com.lx.benefits.bean.dto.jd.token.JdAccessToken">
    insert into ent_jd_access_token (id, access_token, refresh_token, 
      get_time, expires_in, refresh_token_expires, 
      uid, create_time, update_time, 
      create_user, update_user, remark
      )
    values (#{id,jdbcType=BIGINT}, #{accessToken,jdbcType=VARCHAR}, #{refreshToken,jdbcType=VARCHAR}, 
      #{getTime,jdbcType=TIMESTAMP}, #{expiresIn,jdbcType=BIGINT}, #{refreshTokenExpires,jdbcType=BIGINT}, 
      #{uid,jdbcType=VARCHAR}, #{createTime,jdbcType=TIMESTAMP}, #{updateTime,jdbcType=TIMESTAMP}, 
      #{createUser,jdbcType=VARCHAR}, #{updateUser,jdbcType=VARCHAR}, #{remark,jdbcType=VARCHAR}
      )
  </insert>-->
  <insert id="insert" parameterType="com.lx.benefits.bean.dto.jd.token.JdAccessToken">
    insert into ent_jd_access_token
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="accessToken != null">
        access_token,
      </if>
      <if test="refreshToken != null">
        refresh_token,
      </if>
      <if test="getTime != null">
        get_time,
      </if>
      <if test="expiresIn != null">
        expires_in,
      </if>
      <if test="refreshTokenExpires != null">
        refresh_token_expires,
      </if>
      <if test="uid != null">
        uid,
      </if>
      <if test="createTime != null">
        create_time,
      </if>
      <if test="updateTime != null">
        update_time,
      </if>
      <if test="createUser != null">
        create_user,
      </if>
      <if test="updateUser != null">
        update_user,
      </if>
      <if test="remark != null">
        remark,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=BIGINT},
      </if>
      <if test="accessToken != null">
        #{accessToken,jdbcType=VARCHAR},
      </if>
      <if test="refreshToken != null">
        #{refreshToken,jdbcType=VARCHAR},
      </if>
      <if test="getTime != null">
        #{getTime,jdbcType=TIMESTAMP},
      </if>
      <if test="expiresIn != null">
        #{expiresIn,jdbcType=BIGINT},
      </if>
      <if test="refreshTokenExpires != null">
        #{refreshTokenExpires,jdbcType=BIGINT},
      </if>
      <if test="uid != null">
        #{uid,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null">
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null">
        #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="createUser != null">
        #{createUser,jdbcType=VARCHAR},
      </if>
      <if test="updateUser != null">
        #{updateUser,jdbcType=VARCHAR},
      </if>
      <if test="remark != null">
        #{remark,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.lx.benefits.bean.dto.jd.token.JdAccessToken">
    update ent_jd_access_token
    <set>
      <if test="accessToken != null">
        access_token = #{accessToken,jdbcType=VARCHAR},
      </if>
      <if test="refreshToken != null">
        refresh_token = #{refreshToken,jdbcType=VARCHAR},
      </if>
      <if test="getTime != null">
        get_time = #{getTime,jdbcType=TIMESTAMP},
      </if>
      <if test="expiresIn != null">
        expires_in = #{expiresIn,jdbcType=BIGINT},
      </if>
      <if test="refreshTokenExpires != null">
        refresh_token_expires = #{refreshTokenExpires,jdbcType=BIGINT},
      </if>
      <if test="uid != null">
        uid = #{uid,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null">
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null">
        update_time = #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="createUser != null">
        create_user = #{createUser,jdbcType=VARCHAR},
      </if>
      <if test="updateUser != null">
        update_user = #{updateUser,jdbcType=VARCHAR},
      </if>
      <if test="remark != null">
        remark = #{remark,jdbcType=VARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.lx.benefits.bean.dto.jd.token.JdAccessToken">
    update ent_jd_access_token
    set access_token = #{accessToken,jdbcType=VARCHAR},
      refresh_token = #{refreshToken,jdbcType=VARCHAR},
      get_time = #{getTime,jdbcType=TIMESTAMP},
      expires_in = #{expiresIn,jdbcType=BIGINT},
      refresh_token_expires = #{refreshTokenExpires,jdbcType=BIGINT},
      uid = #{uid,jdbcType=VARCHAR},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      update_time = #{updateTime,jdbcType=TIMESTAMP},
      create_user = #{createUser,jdbcType=VARCHAR},
      update_user = #{updateUser,jdbcType=VARCHAR},
      remark = #{remark,jdbcType=VARCHAR}
    where id = #{id,jdbcType=BIGINT}
  </update>
</mapper>