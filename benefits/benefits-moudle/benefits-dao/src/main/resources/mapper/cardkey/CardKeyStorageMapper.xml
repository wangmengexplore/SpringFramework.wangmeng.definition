<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.lx.benefits.mapper.cardkey.CardKeyStorageMapper">
  <resultMap id="BaseResultMap" type="com.lx.benefits.bean.entity.cardkey.CardKeyStorage">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="sku" jdbcType="INTEGER" property="sku" />
    <result column="store_time" jdbcType="TIMESTAMP" property="storeTime" />
    <result column="card_number" jdbcType="VARCHAR" property="cardNumber" />
    <result column="password" jdbcType="VARCHAR" property="password" />
    <result column="dead_time" jdbcType="TIMESTAMP" property="deadTime" />
    <result column="goods_costprice" jdbcType="DECIMAL" property="goodsCostprice" />
    <result column="status" jdbcType="INTEGER" property="status" />
    <result column="deliver_time" jdbcType="TIMESTAMP" property="deliverTime" />
    <result column="order_number" jdbcType="BIGINT" property="orderNumber" />
    <result column="remark" jdbcType="VARCHAR" property="remark" />
    <result column="create_time" jdbcType="TIMESTAMP" property="createTime" />
    <result column="update_time" jdbcType="TIMESTAMP" property="updateTime" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    id, sku, store_time, card_number, password, dead_time, goods_costprice, status, deliver_time, 
    order_number, remark, create_time, update_time
  </sql>
  <select id="selectByExample" parameterType="com.lx.benefits.bean.entity.cardkey.CardKeyStorageExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from card_key_storage
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
    <if test="limit != null">
      <if test="offset != null">
        limit ${offset}, ${limit}
      </if>
      <if test="offset == null">
        limit ${limit}
      </if>
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from card_key_storage
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from card_key_storage
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.lx.benefits.bean.entity.cardkey.CardKeyStorageExample">
    delete from card_key_storage
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.lx.benefits.bean.entity.cardkey.CardKeyStorage">
    insert into card_key_storage (id, sku, store_time, 
      card_number, password, dead_time, 
      goods_costprice, status, deliver_time, 
      order_number, remark, create_time, 
      update_time)
    values (#{id,jdbcType=INTEGER}, #{sku,jdbcType=INTEGER}, #{storeTime,jdbcType=TIMESTAMP}, 
      #{cardNumber,jdbcType=VARCHAR}, #{password,jdbcType=VARCHAR}, #{deadTime,jdbcType=TIMESTAMP}, 
      #{goodsCostprice,jdbcType=DECIMAL}, #{status,jdbcType=INTEGER}, #{deliverTime,jdbcType=TIMESTAMP}, 
      #{orderNumber,jdbcType=BIGINT}, #{remark,jdbcType=VARCHAR}, #{createTime,jdbcType=TIMESTAMP}, 
      #{updateTime,jdbcType=TIMESTAMP})
  </insert>
  <insert id="insertSelective" parameterType="com.lx.benefits.bean.entity.cardkey.CardKeyStorage">
    insert into card_key_storage
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="sku != null">
        sku,
      </if>
      <if test="storeTime != null">
        store_time,
      </if>
      <if test="cardNumber != null">
        card_number,
      </if>
      <if test="password != null">
        password,
      </if>
      <if test="deadTime != null">
        dead_time,
      </if>
      <if test="goodsCostprice != null">
        goods_costprice,
      </if>
      <if test="status != null">
        status,
      </if>
      <if test="deliverTime != null">
        deliver_time,
      </if>
      <if test="orderNumber != null">
        order_number,
      </if>
      <if test="remark != null">
        remark,
      </if>
      <if test="createTime != null">
        create_time,
      </if>
      <if test="updateTime != null">
        update_time,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=INTEGER},
      </if>
      <if test="sku != null">
        #{sku,jdbcType=INTEGER},
      </if>
      <if test="storeTime != null">
        #{storeTime,jdbcType=TIMESTAMP},
      </if>
      <if test="cardNumber != null">
        #{cardNumber,jdbcType=VARCHAR},
      </if>
      <if test="password != null">
        #{password,jdbcType=VARCHAR},
      </if>
      <if test="deadTime != null">
        #{deadTime,jdbcType=TIMESTAMP},
      </if>
      <if test="goodsCostprice != null">
        #{goodsCostprice,jdbcType=DECIMAL},
      </if>
      <if test="status != null">
        #{status,jdbcType=INTEGER},
      </if>
      <if test="deliverTime != null">
        #{deliverTime,jdbcType=TIMESTAMP},
      </if>
      <if test="orderNumber != null">
        #{orderNumber,jdbcType=BIGINT},
      </if>
      <if test="remark != null">
        #{remark,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null">
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null">
        #{updateTime,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.lx.benefits.bean.entity.cardkey.CardKeyStorageExample" resultType="java.lang.Long">
    select count(*) from card_key_storage
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update card_key_storage
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.sku != null">
        sku = #{record.sku,jdbcType=INTEGER},
      </if>
      <if test="record.storeTime != null">
        store_time = #{record.storeTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.cardNumber != null">
        card_number = #{record.cardNumber,jdbcType=VARCHAR},
      </if>
      <if test="record.password != null">
        password = #{record.password,jdbcType=VARCHAR},
      </if>
      <if test="record.deadTime != null">
        dead_time = #{record.deadTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.goodsCostprice != null">
        goods_costprice = #{record.goodsCostprice,jdbcType=DECIMAL},
      </if>
      <if test="record.status != null">
        status = #{record.status,jdbcType=INTEGER},
      </if>
      <if test="record.deliverTime != null">
        deliver_time = #{record.deliverTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.orderNumber != null">
        order_number = #{record.orderNumber,jdbcType=BIGINT},
      </if>
      <if test="record.remark != null">
        remark = #{record.remark,jdbcType=VARCHAR},
      </if>
      <if test="record.createTime != null">
        create_time = #{record.createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.updateTime != null">
        update_time = #{record.updateTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update card_key_storage
    set id = #{record.id,jdbcType=INTEGER},
      sku = #{record.sku,jdbcType=INTEGER},
      store_time = #{record.storeTime,jdbcType=TIMESTAMP},
      card_number = #{record.cardNumber,jdbcType=VARCHAR},
      password = #{record.password,jdbcType=VARCHAR},
      dead_time = #{record.deadTime,jdbcType=TIMESTAMP},
      goods_costprice = #{record.goodsCostprice,jdbcType=DECIMAL},
      status = #{record.status,jdbcType=INTEGER},
      deliver_time = #{record.deliverTime,jdbcType=TIMESTAMP},
      order_number = #{record.orderNumber,jdbcType=BIGINT},
      remark = #{record.remark,jdbcType=VARCHAR},
      create_time = #{record.createTime,jdbcType=TIMESTAMP},
      update_time = #{record.updateTime,jdbcType=TIMESTAMP}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.lx.benefits.bean.entity.cardkey.CardKeyStorage">
    update card_key_storage
    <set>
      <if test="sku != null">
        sku = #{sku,jdbcType=INTEGER},
      </if>
      <if test="storeTime != null">
        store_time = #{storeTime,jdbcType=TIMESTAMP},
      </if>
      <if test="cardNumber != null">
        card_number = #{cardNumber,jdbcType=VARCHAR},
      </if>
      <if test="password != null">
        password = #{password,jdbcType=VARCHAR},
      </if>
      <if test="deadTime != null">
        dead_time = #{deadTime,jdbcType=TIMESTAMP},
      </if>
      <if test="goodsCostprice != null">
        goods_costprice = #{goodsCostprice,jdbcType=DECIMAL},
      </if>
      <if test="status != null">
        status = #{status,jdbcType=INTEGER},
      </if>
      <if test="deliverTime != null">
        deliver_time = #{deliverTime,jdbcType=TIMESTAMP},
      </if>
      <if test="orderNumber != null">
        order_number = #{orderNumber,jdbcType=BIGINT},
      </if>
      <if test="remark != null">
        remark = #{remark,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null">
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null">
        update_time = #{updateTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.lx.benefits.bean.entity.cardkey.CardKeyStorage">
    update card_key_storage
    set sku = #{sku,jdbcType=INTEGER},
      store_time = #{storeTime,jdbcType=TIMESTAMP},
      card_number = #{cardNumber,jdbcType=VARCHAR},
      password = #{password,jdbcType=VARCHAR},
      dead_time = #{deadTime,jdbcType=TIMESTAMP},
      goods_costprice = #{goodsCostprice,jdbcType=DECIMAL},
      status = #{status,jdbcType=INTEGER},
      deliver_time = #{deliverTime,jdbcType=TIMESTAMP},
      order_number = #{orderNumber,jdbcType=BIGINT},
      remark = #{remark,jdbcType=VARCHAR},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      update_time = #{updateTime,jdbcType=TIMESTAMP}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>