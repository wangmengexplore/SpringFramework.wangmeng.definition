<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.lx.benefits.mapper.client.ClientMessageMapper">
  <resultMap id="BaseResultMap" type="com.lx.benefits.bean.entity.client.ClientMessage">
    <id column="message_id" jdbcType="CHAR" property="messageId" />
    <result column="message_type" jdbcType="INTEGER" property="messageType" />
    <result column="message_info" jdbcType="VARCHAR" property="messageInfo" />
    <result column="org_code" jdbcType="VARCHAR" property="orgCode" />
    <result column="is_success" jdbcType="BIT" property="isSuccess" />
    <result column="send_count" jdbcType="INTEGER" property="sendCount" />
    <result column="client_user_id" jdbcType="VARCHAR" property="clientUserId" />
    <result column="create_time" jdbcType="TIMESTAMP" property="createTime" />
    <result column="update_time" jdbcType="TIMESTAMP" property="updateTime" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    message_id, message_type, message_info, org_code, is_success, send_count, client_user_id, 
    create_time, update_time
  </sql>
  <select id="selectByExample" parameterType="com.lx.benefits.bean.entity.client.ClientMessageCondition" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from client_message
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
    <if test="limit != null">
      <if test="offset != null">
        limit ${offset}, ${limit}
      </if>
      <if test="offset == null">
        limit ${limit}
      </if>
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.String" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from client_message
    where message_id = #{messageId,jdbcType=CHAR}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.String">
    delete from client_message
    where message_id = #{messageId,jdbcType=CHAR}
  </delete>
  <delete id="deleteByExample" parameterType="com.lx.benefits.bean.entity.client.ClientMessageCondition">
    delete from client_message
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.lx.benefits.bean.entity.client.ClientMessage">
    insert into client_message (message_id, message_type, message_info, 
      org_code, is_success, send_count, 
      client_user_id, create_time, update_time
      )
    values (#{messageId,jdbcType=CHAR}, #{messageType,jdbcType=INTEGER}, #{messageInfo,jdbcType=VARCHAR}, 
      #{orgCode,jdbcType=VARCHAR}, #{isSuccess,jdbcType=BIT}, #{sendCount,jdbcType=INTEGER}, 
      #{clientUserId,jdbcType=VARCHAR}, #{createTime,jdbcType=TIMESTAMP}, #{updateTime,jdbcType=TIMESTAMP}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.lx.benefits.bean.entity.client.ClientMessage">
    insert into client_message
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="messageId != null">
        message_id,
      </if>
      <if test="messageType != null">
        message_type,
      </if>
      <if test="messageInfo != null">
        message_info,
      </if>
      <if test="orgCode != null">
        org_code,
      </if>
      <if test="isSuccess != null">
        is_success,
      </if>
      <if test="sendCount != null">
        send_count,
      </if>
      <if test="clientUserId != null">
        client_user_id,
      </if>
      <if test="createTime != null">
        create_time,
      </if>
      <if test="updateTime != null">
        update_time,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="messageId != null">
        #{messageId,jdbcType=CHAR},
      </if>
      <if test="messageType != null">
        #{messageType,jdbcType=INTEGER},
      </if>
      <if test="messageInfo != null">
        #{messageInfo,jdbcType=VARCHAR},
      </if>
      <if test="orgCode != null">
        #{orgCode,jdbcType=VARCHAR},
      </if>
      <if test="isSuccess != null">
        #{isSuccess,jdbcType=BIT},
      </if>
      <if test="sendCount != null">
        #{sendCount,jdbcType=INTEGER},
      </if>
      <if test="clientUserId != null">
        #{clientUserId,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null">
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null">
        #{updateTime,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.lx.benefits.bean.entity.client.ClientMessageCondition" resultType="java.lang.Long">
    select count(*) from client_message
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update client_message
    <set>
      <if test="record.messageId != null">
        message_id = #{record.messageId,jdbcType=CHAR},
      </if>
      <if test="record.messageType != null">
        message_type = #{record.messageType,jdbcType=INTEGER},
      </if>
      <if test="record.messageInfo != null">
        message_info = #{record.messageInfo,jdbcType=VARCHAR},
      </if>
      <if test="record.orgCode != null">
        org_code = #{record.orgCode,jdbcType=VARCHAR},
      </if>
      <if test="record.isSuccess != null">
        is_success = #{record.isSuccess,jdbcType=BIT},
      </if>
      <if test="record.sendCount != null">
        send_count = #{record.sendCount,jdbcType=INTEGER},
      </if>
      <if test="record.clientUserId != null">
        client_user_id = #{record.clientUserId,jdbcType=VARCHAR},
      </if>
      <if test="record.createTime != null">
        create_time = #{record.createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.updateTime != null">
        update_time = #{record.updateTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update client_message
    set message_id = #{record.messageId,jdbcType=CHAR},
      message_type = #{record.messageType,jdbcType=INTEGER},
      message_info = #{record.messageInfo,jdbcType=VARCHAR},
      org_code = #{record.orgCode,jdbcType=VARCHAR},
      is_success = #{record.isSuccess,jdbcType=BIT},
      send_count = #{record.sendCount,jdbcType=INTEGER},
      client_user_id = #{record.clientUserId,jdbcType=VARCHAR},
      create_time = #{record.createTime,jdbcType=TIMESTAMP},
      update_time = #{record.updateTime,jdbcType=TIMESTAMP}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.lx.benefits.bean.entity.client.ClientMessage">
    update client_message
    <set>
      <if test="messageType != null">
        message_type = #{messageType,jdbcType=INTEGER},
      </if>
      <if test="messageInfo != null">
        message_info = #{messageInfo,jdbcType=VARCHAR},
      </if>
      <if test="orgCode != null">
        org_code = #{orgCode,jdbcType=VARCHAR},
      </if>
      <if test="isSuccess != null">
        is_success = #{isSuccess,jdbcType=BIT},
      </if>
      <if test="sendCount != null">
        send_count = #{sendCount,jdbcType=INTEGER},
      </if>
      <if test="clientUserId != null">
        client_user_id = #{clientUserId,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null">
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null">
        update_time = #{updateTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    where message_id = #{messageId,jdbcType=CHAR}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.lx.benefits.bean.entity.client.ClientMessage">
    update client_message
    set message_type = #{messageType,jdbcType=INTEGER},
      message_info = #{messageInfo,jdbcType=VARCHAR},
      org_code = #{orgCode,jdbcType=VARCHAR},
      is_success = #{isSuccess,jdbcType=BIT},
      send_count = #{sendCount,jdbcType=INTEGER},
      client_user_id = #{clientUserId,jdbcType=VARCHAR},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      update_time = #{updateTime,jdbcType=TIMESTAMP}
    where message_id = #{messageId,jdbcType=CHAR}
  </update>
</mapper>