<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.lx.benefits.mapper.supplieruser.SupplierUserMapper">
  <resultMap id="BaseResultMap" type="com.lx.benefits.bean.entity.supplieruser.SupplierUser">
    <id column="id" jdbcType="BIGINT" property="id" />
    <result column="supplier_id" jdbcType="BIGINT" property="supplier_id" />
    <result column="login_name" jdbcType="VARCHAR" property="login_name" />
    <result column="password" jdbcType="VARCHAR" property="password" />
    <result column="password_update_time" jdbcType="TIMESTAMP" property="password_update_time" />
    <result column="salt_key" jdbcType="VARCHAR" property="salt_key" />
    <result column="user_name" jdbcType="VARCHAR" property="user_name" />
    <result column="sex" jdbcType="BIT" property="sex" />
    <result column="email" jdbcType="VARCHAR" property="email" />
    <result column="phone" jdbcType="VARCHAR" property="phone" />
    <result column="telphone" jdbcType="VARCHAR" property="telphone" />
    <result column="address" jdbcType="VARCHAR" property="address" />
    <result column="status" jdbcType="BIT" property="status" />
    <result column="create_time" jdbcType="TIMESTAMP" property="create_time" />
    <result column="update_time" jdbcType="TIMESTAMP" property="update_time" />
    <result column="create_user" jdbcType="VARCHAR" property="create_user" />
    <result column="update_user" jdbcType="VARCHAR" property="update_user" />
  </resultMap>
  <resultMap extends="BaseResultMap" id="ResultMapWithBLOBs" type="com.lx.benefits.bean.entity.supplieruser.SupplierUser">
    <result column="description" jdbcType="LONGVARCHAR" property="description" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    id, supplier_id, login_name, password, password_update_time, salt_key, user_name, 
    sex, email, phone, telphone, address, status, create_time, update_time, create_user, 
    update_user
  </sql>
  <sql id="Blob_Column_List">
    description
  </sql>
  <sql id="Full_Column_List">
    <include refid="Base_Column_List"/>, <include refid="Blob_Column_List"/>
  </sql>
  <select id="selectByExampleWithBLOBs" parameterType="com.lx.benefits.bean.entity.supplieruser.SupplierUserExample" resultMap="ResultMapWithBLOBs">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from sup_supplier_user
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByExample" parameterType="com.lx.benefits.bean.entity.supplieruser.SupplierUserExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from sup_supplier_user
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
    <if test="page != null and pageSize != null">
      LIMIT #{page}, #{pageSize}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="ResultMapWithBLOBs">
    select 
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from sup_supplier_user
    where id = #{id,jdbcType=BIGINT}
  </select>
  <select id="selectBySupplierId" parameterType="java.lang.Long" resultMap="ResultMapWithBLOBs">
    select
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from sup_supplier_user
    where status = 1 and supplier_id = #{sid,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
    delete from sup_supplier_user
    where id = #{id,jdbcType=BIGINT}
  </delete>
  <delete id="deleteByExample" parameterType="com.lx.benefits.bean.entity.supplieruser.SupplierUserExample">
    delete from sup_supplier_user
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.lx.benefits.bean.entity.supplieruser.SupplierUser">
    insert into sup_supplier_user (id, supplier_id, login_name, 
      password, password_update_time, salt_key, 
      user_name, sex, email, 
      phone, telphone, address, 
      status, create_time, update_time, 
      create_user, update_user, description
      )
    values (#{id,jdbcType=BIGINT}, #{supplier_id,jdbcType=BIGINT}, #{login_name,jdbcType=VARCHAR}, 
      #{password,jdbcType=VARCHAR}, #{password_update_time,jdbcType=TIMESTAMP}, #{salt_key,jdbcType=VARCHAR}, 
      #{user_name,jdbcType=VARCHAR}, #{sex,jdbcType=BIT}, #{email,jdbcType=VARCHAR}, 
      #{phone,jdbcType=VARCHAR}, #{telphone,jdbcType=VARCHAR}, #{address,jdbcType=VARCHAR}, 
      #{status,jdbcType=BIT}, #{create_time,jdbcType=TIMESTAMP}, #{update_time,jdbcType=TIMESTAMP}, 
      #{create_user,jdbcType=VARCHAR}, #{update_user,jdbcType=VARCHAR}, #{description,jdbcType=LONGVARCHAR}
      )
  </insert>
  <insert id="insertSelective"  useGeneratedKeys="true" keyProperty="id" parameterType="com.lx.benefits.bean.entity.supplieruser.SupplierUser">
    insert into sup_supplier_user
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="supplier_id != null">
        supplier_id,
      </if>
      <if test="login_name != null">
        login_name,
      </if>
      <if test="password != null">
        password,
      </if>
      <if test="password_update_time != null">
        password_update_time,
      </if>
      <if test="salt_key != null">
        salt_key,
      </if>
      <if test="user_name != null">
        user_name,
      </if>
      <if test="sex != null">
        sex,
      </if>
      <if test="email != null">
        email,
      </if>
      <if test="phone != null">
        phone,
      </if>
      <if test="telphone != null">
        telphone,
      </if>
      <if test="address != null">
        address,
      </if>
      <if test="status != null">
        status,
      </if>
      <if test="create_time != null">
        create_time,
      </if>
      <if test="update_time != null">
        update_time,
      </if>
      <if test="create_user != null">
        create_user,
      </if>
      <if test="update_user != null">
        update_user,
      </if>
      <if test="description != null">
        description,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=BIGINT},
      </if>
      <if test="supplier_id != null">
        #{supplier_id,jdbcType=BIGINT},
      </if>
      <if test="login_name != null">
        #{login_name,jdbcType=VARCHAR},
      </if>
      <if test="password != null">
        #{password,jdbcType=VARCHAR},
      </if>
      <if test="password_update_time != null">
        #{password_update_time,jdbcType=TIMESTAMP},
      </if>
      <if test="salt_key != null">
        #{salt_key,jdbcType=VARCHAR},
      </if>
      <if test="user_name != null">
        #{user_name,jdbcType=VARCHAR},
      </if>
      <if test="sex != null">
        #{sex,jdbcType=BIT},
      </if>
      <if test="email != null">
        #{email,jdbcType=VARCHAR},
      </if>
      <if test="phone != null">
        #{phone,jdbcType=VARCHAR},
      </if>
      <if test="telphone != null">
        #{telphone,jdbcType=VARCHAR},
      </if>
      <if test="address != null">
        #{address,jdbcType=VARCHAR},
      </if>
      <if test="status != null">
        #{status,jdbcType=BIT},
      </if>
      <if test="create_time != null">
        #{create_time,jdbcType=TIMESTAMP},
      </if>
      <if test="update_time != null">
        #{update_time,jdbcType=TIMESTAMP},
      </if>
      <if test="create_user != null">
        #{create_user,jdbcType=VARCHAR},
      </if>
      <if test="update_user != null">
        #{update_user,jdbcType=VARCHAR},
      </if>
      <if test="description != null">
        #{description,jdbcType=LONGVARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.lx.benefits.bean.entity.supplieruser.SupplierUserExample" resultType="java.lang.Integer">
    select count(*) from sup_supplier_user
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update sup_supplier_user
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=BIGINT},
      </if>
      <if test="record.supplier_id != null">
        supplier_id = #{record.supplier_id,jdbcType=BIGINT},
      </if>
      <if test="record.login_name != null">
        login_name = #{record.login_name,jdbcType=VARCHAR},
      </if>
      <if test="record.password != null">
        password = #{record.password,jdbcType=VARCHAR},
      </if>
      <if test="record.password_update_time != null">
        password_update_time = #{record.password_update_time,jdbcType=TIMESTAMP},
      </if>
      <if test="record.salt_key != null">
        salt_key = #{record.salt_key,jdbcType=VARCHAR},
      </if>
      <if test="record.user_name != null">
        user_name = #{record.user_name,jdbcType=VARCHAR},
      </if>
      <if test="record.sex != null">
        sex = #{record.sex,jdbcType=BIT},
      </if>
      <if test="record.email != null">
        email = #{record.email,jdbcType=VARCHAR},
      </if>
      <if test="record.phone != null">
        phone = #{record.phone,jdbcType=VARCHAR},
      </if>
      <if test="record.telphone != null">
        telphone = #{record.telphone,jdbcType=VARCHAR},
      </if>
      <if test="record.address != null">
        address = #{record.address,jdbcType=VARCHAR},
      </if>
      <if test="record.status != null">
        status = #{record.status,jdbcType=BIT},
      </if>
      <if test="record.create_time != null">
        create_time = #{record.create_time,jdbcType=TIMESTAMP},
      </if>
      <if test="record.update_time != null">
        update_time = #{record.update_time,jdbcType=TIMESTAMP},
      </if>
      <if test="record.create_user != null">
        create_user = #{record.create_user,jdbcType=VARCHAR},
      </if>
      <if test="record.update_user != null">
        update_user = #{record.update_user,jdbcType=VARCHAR},
      </if>
      <if test="record.description != null">
        description = #{record.description,jdbcType=LONGVARCHAR},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExampleWithBLOBs" parameterType="map">
    update sup_supplier_user
    set id = #{record.id,jdbcType=BIGINT},
      supplier_id = #{record.supplier_id,jdbcType=BIGINT},
      login_name = #{record.login_name,jdbcType=VARCHAR},
      password = #{record.password,jdbcType=VARCHAR},
      password_update_time = #{record.password_update_time,jdbcType=TIMESTAMP},
      salt_key = #{record.salt_key,jdbcType=VARCHAR},
      user_name = #{record.user_name,jdbcType=VARCHAR},
      sex = #{record.sex,jdbcType=BIT},
      email = #{record.email,jdbcType=VARCHAR},
      phone = #{record.phone,jdbcType=VARCHAR},
      telphone = #{record.telphone,jdbcType=VARCHAR},
      address = #{record.address,jdbcType=VARCHAR},
      status = #{record.status,jdbcType=BIT},
      create_time = #{record.create_time,jdbcType=TIMESTAMP},
      update_time = #{record.update_time,jdbcType=TIMESTAMP},
      create_user = #{record.create_user,jdbcType=VARCHAR},
      update_user = #{record.update_user,jdbcType=VARCHAR},
      description = #{record.description,jdbcType=LONGVARCHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update sup_supplier_user
    set id = #{record.id,jdbcType=BIGINT},
      supplier_id = #{record.supplier_id,jdbcType=BIGINT},
      login_name = #{record.login_name,jdbcType=VARCHAR},
      password = #{record.password,jdbcType=VARCHAR},
      password_update_time = #{record.password_update_time,jdbcType=TIMESTAMP},
      salt_key = #{record.salt_key,jdbcType=VARCHAR},
      user_name = #{record.user_name,jdbcType=VARCHAR},
      sex = #{record.sex,jdbcType=BIT},
      email = #{record.email,jdbcType=VARCHAR},
      phone = #{record.phone,jdbcType=VARCHAR},
      telphone = #{record.telphone,jdbcType=VARCHAR},
      address = #{record.address,jdbcType=VARCHAR},
      status = #{record.status,jdbcType=BIT},
      create_time = #{record.create_time,jdbcType=TIMESTAMP},
      update_time = #{record.update_time,jdbcType=TIMESTAMP},
      create_user = #{record.create_user,jdbcType=VARCHAR},
      update_user = #{record.update_user,jdbcType=VARCHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.lx.benefits.bean.entity.supplieruser.SupplierUser">
    update sup_supplier_user
    <set>
      <if test="supplier_id != null">
        supplier_id = #{supplier_id,jdbcType=BIGINT},
      </if>
      <if test="login_name != null">
        login_name = #{login_name,jdbcType=VARCHAR},
      </if>
      <if test="password != null">
        password = #{password,jdbcType=VARCHAR},
      </if>
      <if test="password_update_time != null">
        password_update_time = #{password_update_time,jdbcType=TIMESTAMP},
      </if>
      <if test="salt_key != null">
        salt_key = #{salt_key,jdbcType=VARCHAR},
      </if>
      <if test="user_name != null">
        user_name = #{user_name,jdbcType=VARCHAR},
      </if>
      <if test="sex != null">
        sex = #{sex,jdbcType=BIT},
      </if>
      <if test="email != null">
        email = #{email,jdbcType=VARCHAR},
      </if>
      <if test="phone != null">
        phone = #{phone,jdbcType=VARCHAR},
      </if>
      <if test="telphone != null">
        telphone = #{telphone,jdbcType=VARCHAR},
      </if>
      <if test="address != null">
        address = #{address,jdbcType=VARCHAR},
      </if>
      <if test="status != null">
        status = #{status,jdbcType=BIT},
      </if>
      <if test="create_time != null">
        create_time = #{create_time,jdbcType=TIMESTAMP},
      </if>
      <if test="update_time != null">
        update_time = #{update_time,jdbcType=TIMESTAMP},
      </if>
      <if test="create_user != null">
        create_user = #{create_user,jdbcType=VARCHAR},
      </if>
      <if test="update_user != null">
        update_user = #{update_user,jdbcType=VARCHAR},
      </if>
      <if test="description != null">
        description = #{description,jdbcType=LONGVARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKeyWithBLOBs" parameterType="com.lx.benefits.bean.entity.supplieruser.SupplierUser">
    update sup_supplier_user
    set supplier_id = #{supplier_id,jdbcType=BIGINT},
      login_name = #{login_name,jdbcType=VARCHAR},
      password = #{password,jdbcType=VARCHAR},
      password_update_time = #{password_update_time,jdbcType=TIMESTAMP},
      salt_key = #{salt_key,jdbcType=VARCHAR},
      user_name = #{user_name,jdbcType=VARCHAR},
      sex = #{sex,jdbcType=BIT},
      email = #{email,jdbcType=VARCHAR},
      phone = #{phone,jdbcType=VARCHAR},
      telphone = #{telphone,jdbcType=VARCHAR},
      address = #{address,jdbcType=VARCHAR},
      status = #{status,jdbcType=BIT},
      create_time = #{create_time,jdbcType=TIMESTAMP},
      update_time = #{update_time,jdbcType=TIMESTAMP},
      create_user = #{create_user,jdbcType=VARCHAR},
      update_user = #{update_user,jdbcType=VARCHAR},
      description = #{description,jdbcType=LONGVARCHAR}
    where id = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.lx.benefits.bean.entity.supplieruser.SupplierUser">
    update sup_supplier_user
    set supplier_id = #{supplier_id,jdbcType=BIGINT},
      login_name = #{login_name,jdbcType=VARCHAR},
      password = #{password,jdbcType=VARCHAR},
      password_update_time = #{password_update_time,jdbcType=TIMESTAMP},
      salt_key = #{salt_key,jdbcType=VARCHAR},
      user_name = #{user_name,jdbcType=VARCHAR},
      sex = #{sex,jdbcType=BIT},
      email = #{email,jdbcType=VARCHAR},
      phone = #{phone,jdbcType=VARCHAR},
      telphone = #{telphone,jdbcType=VARCHAR},
      address = #{address,jdbcType=VARCHAR},
      status = #{status,jdbcType=BIT},
      create_time = #{create_time,jdbcType=TIMESTAMP},
      update_time = #{update_time,jdbcType=TIMESTAMP},
      create_user = #{create_user,jdbcType=VARCHAR},
      update_user = #{update_user,jdbcType=VARCHAR}
    where id = #{id,jdbcType=BIGINT}
  </update>


  <!--根据供应商登录名获取供应商登录信息-->
  <select id="getSupplierUserByLoginName" resultType="com.lx.benefits.bean.entity.supplieruser.SupplierUser">
    SELECT
    <include refid="Full_Column_List"/>
    FROM
    `sup_supplier_user`
    WHERE
    `login_name` = #{LoginName}
    LIMIT 1
  </select>
  
</mapper>