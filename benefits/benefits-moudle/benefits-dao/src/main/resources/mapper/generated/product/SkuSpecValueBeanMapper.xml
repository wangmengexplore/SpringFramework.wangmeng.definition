<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.lx.benefits.mapper.product.SkuSpecValueMapper">
  <select id="seleSkuOneSpecValue" resultType="com.lx.benefits.bean.dto.spec.SkuSpectValueBean">
  		select spec1.sku_id as skuId, spec1.spec_id as specId1, spec1.spec_value as specValue1, spec1.spec_image as specImage1
  		from sku_spec_value spec1
  		where spec1.spec_id = #{specId}
  			 and spec1.sku_id in
  		<foreach collection="skuIds" item="skuId" open="(" close=")" separator=",">
  			#{skuId}
  		</foreach>
  </select>
  <select id="selectSkuTwoSpecValue" resultType="com.lx.benefits.bean.dto.spec.SkuSpectValueBean">
  		select spec1.sku_id as skuId, spec1.spec_id as specId1, spec1.spec_value as specValue1, spec1.spec_image as specImage1,
  			spec2.spec_id as specId2, spec2.spec_value as specValue2, spec2.spec_image as specImage2
  		from sku_spec_value spec1
  			left join sku_spec_value spec2 on spec1.sku_id=spec2.sku_id
  		where spec1.spec_id = #{firstSpecId} and spec2.spec_id=#{secondSpecId}
  			 and spec1.sku_id in
  		<foreach collection="skuIds" item="skuId" open="(" close=")" separator=",">
  			#{skuId}
  		</foreach>
  </select>
  <select id="getSkuSpecValue" resultType="com.lx.benefits.bean.entity.product.SkuSpecValue">
  		select sku_id as skuId,  GROUP_CONCAT(spec_value ORDER BY spec_id asc SEPARATOR '/') as specValue
  		from sku_spec_value
  		where sku_id in
  		<foreach collection="skuIds" item="skuId" open="(" close=")" separator=",">
  			#{skuId}
  		</foreach>
  		group by sku_id
  </select>
</mapper>