<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.lx.benefits.mapper.enterprmoduleinfo.EnterprModuleInfoMapper">
  <resultMap id="BaseResultMap" type="com.lx.benefits.bean.entity.enterprmoduleinfo.EnterprModuleInfo">
    <id column="moduleId" jdbcType="BIGINT" property="moduleId" />
    <result column="customId" jdbcType="BIGINT" property="customId" />
    <result column="moduleName" jdbcType="VARCHAR" property="moduleName" />
    <result column="moduleNameEn" jdbcType="VARCHAR" property="moduleNameEn" />
    <result column="moduleLink" jdbcType="VARCHAR" property="moduleLink" />
    <result column="modulePic" jdbcType="VARCHAR" property="modulePic" />
    <result column="background" jdbcType="VARCHAR" property="background" />
    <result column="selectedBackground" jdbcType="VARCHAR" property="selectedBackground" />
    <result column="moduleSort" jdbcType="INTEGER" property="moduleSort" />
    <result column="startTime" jdbcType="INTEGER" property="startTime" />
    <result column="endTime" jdbcType="INTEGER" property="endTime" />
    <result column="isShow" jdbcType="TINYINT" property="isShow" />
    <result column="isDeleted" jdbcType="TINYINT" property="isDeleted" />
    <result column="created" jdbcType="INTEGER" property="created" />
    <result column="updated" jdbcType="INTEGER" property="updated" />
    <result column="type" jdbcType="INTEGER" property="type" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    moduleId, customId, moduleName,moduleNameEn, moduleLink, modulePic, background, selectedBackground,
    moduleSort, startTime, endTime, isShow, isDeleted, created, updated,type
  </sql>
  <select id="selectByExample" parameterType="com.lx.benefits.bean.entity.enterprmoduleinfo.EnterprModuleInfoExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from  enterpr_module_info
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from  enterpr_module_info
    where moduleId = #{moduleId,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
    delete from  enterpr_module_info
    where moduleId = #{moduleId,jdbcType=BIGINT}
  </delete>
  <delete id="deleteByExample" parameterType="com.lx.benefits.bean.entity.enterprmoduleinfo.EnterprModuleInfoExample">
    delete from  enterpr_module_info
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.lx.benefits.bean.entity.enterprmoduleinfo.EnterprModuleInfo">
    insert into  enterpr_module_info (moduleId, customId, moduleName, moduleNameEn,
      moduleLink, modulePic, background, 
      selectedBackground, moduleSort, startTime, 
      endTime, isDeleted, created, 
      updated,type)
    values (#{moduleId,jdbcType=BIGINT}, #{customId,jdbcType=BIGINT}, #{moduleName,jdbcType=VARCHAR}, #{moduleNameEn,jdbcType=VARCHAR},
      #{moduleLink,jdbcType=VARCHAR}, #{modulePic,jdbcType=VARCHAR}, #{background,jdbcType=VARCHAR}, 
      #{selectedBackground,jdbcType=VARCHAR}, #{moduleSort,jdbcType=INTEGER}, #{startTime,jdbcType=INTEGER}, 
      #{endTime,jdbcType=INTEGER}, #{isDeleted,jdbcType=TINYINT}, UNIX_TIMESTAMP(NOW()), 
      UNIX_TIMESTAMP(NOW()), #{type,jdbcType=TINYINT})
  </insert>
  <insert id="insertSelective" useGeneratedKeys="true" keyProperty="moduleId" parameterType="com.lx.benefits.bean.entity.enterprmoduleinfo.EnterprModuleInfo">
    insert into  enterpr_module_info
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="moduleId != null">
        moduleId,
      </if>
      <if test="customId != null">
        customId,
      </if>
      <if test="moduleName != null">
        moduleName,
      </if>
      <if test="moduleNameEn != null">
        moduleNameEn,
      </if>
      <if test="moduleLink != null">
        moduleLink,
      </if>
      <if test="modulePic != null">
        modulePic,
      </if>
      <if test="background != null">
        background,
      </if>
      <if test="selectedBackground != null">
        selectedBackground,
      </if>
      <if test="moduleSort != null">
        moduleSort,
      </if>
      <if test="startTime != null">
        startTime,
      </if>
      <if test="endTime != null">
        endTime,
      </if>
      <if test="isShow != null">
        isShow,
      </if>
      <if test="isDeleted != null">
        isDeleted,
      </if>
      <if test="type != null">
        type,
      </if>
      <if test="created != null">
        created,
      </if>
      updated
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="moduleId != null">
        #{moduleId,jdbcType=BIGINT},
      </if>
      <if test="customId != null">
        #{customId,jdbcType=BIGINT},
      </if>
      <if test="moduleName != null">
        #{moduleName,jdbcType=VARCHAR},
      </if>
      <if test="moduleNameEn != null">
        #{moduleNameEn,jdbcType=VARCHAR},
      </if>
      <if test="moduleLink != null">
        #{moduleLink,jdbcType=VARCHAR},
      </if>
      <if test="modulePic != null">
        #{modulePic,jdbcType=VARCHAR},
      </if>
      <if test="background != null">
        #{background,jdbcType=VARCHAR},
      </if>
      <if test="selectedBackground != null">
        #{selectedBackground,jdbcType=VARCHAR},
      </if>
      <if test="moduleSort != null">
        #{moduleSort,jdbcType=INTEGER},
      </if>
      <if test="startTime != null">
        #{startTime,jdbcType=INTEGER},
      </if>
      <if test="endTime != null">
        #{endTime,jdbcType=INTEGER},
      </if>
      <if test="isShow != null">
        #{isShow,jdbcType=TINYINT},
      </if>
      <if test="isDeleted != null">
        #{isDeleted,jdbcType=TINYINT},
      </if>
      <if test="type != null">
        #{type,jdbcType=TINYINT},
      </if>
      <if test="created != null">
        #{created,jdbcType=INTEGER},
      </if>
      UNIX_TIMESTAMP(NOW())
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.lx.benefits.bean.entity.enterprmoduleinfo.EnterprModuleInfoExample" resultType="java.lang.Integer">
    select count(*) from  enterpr_module_info
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update  enterpr_module_info
    <set>
      <if test="record.moduleId != null">
        moduleId = #{record.moduleId,jdbcType=BIGINT},
      </if>
      <if test="record.customId != null">
        customId = #{record.customId,jdbcType=BIGINT},
      </if>
      <if test="record.moduleName != null">
        moduleName = #{record.moduleName,jdbcType=VARCHAR},
      </if>
      <if test="record.moduleNameEn != null">
        moduleNameEn = #{record.moduleNameEn,jdbcType=VARCHAR},
      </if>
      <if test="record.moduleLink != null">
        moduleLink = #{record.moduleLink,jdbcType=VARCHAR},
      </if>
      <if test="record.modulePic != null">
        modulePic = #{record.modulePic,jdbcType=VARCHAR},
      </if>
      <if test="record.background != null">
        background = #{record.background,jdbcType=VARCHAR},
      </if>
      <if test="record.selectedBackground != null">
        selectedBackground = #{record.selectedBackground,jdbcType=VARCHAR},
      </if>
      <if test="record.moduleSort != null">
        moduleSort = #{record.moduleSort,jdbcType=INTEGER},
      </if>
      <if test="record.startTime != null">
        startTime = #{record.startTime,jdbcType=INTEGER},
      </if>
      <if test="record.endTime != null">
        endTime = #{record.endTime,jdbcType=INTEGER},
      </if>
      <if test="record.isShow != null">
        isDeleted = #{record.isShow,jdbcType=TINYINT},
      </if>
      <if test="record.isDeleted != null">
        isDeleted = #{record.isDeleted,jdbcType=TINYINT},
      </if>
      <if test="record.type != null">
        type = #{record.type,jdbcType=TINYINT},
      </if>
      updated = UNIX_TIMESTAMP(NOW())
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update  enterpr_module_info
    set moduleId = #{record.moduleId,jdbcType=BIGINT},
      customId = #{record.customId,jdbcType=BIGINT},
      moduleName = #{record.moduleName,jdbcType=VARCHAR},
      moduleNameEn = #{record.moduleNameEn,jdbcType=VARCHAR},
      moduleLink = #{record.moduleLink,jdbcType=VARCHAR},
      modulePic = #{record.modulePic,jdbcType=VARCHAR},
      background = #{record.background,jdbcType=VARCHAR},
      selectedBackground = #{record.selectedBackground,jdbcType=VARCHAR},
      moduleSort = #{record.moduleSort,jdbcType=INTEGER},
      startTime = #{record.startTime,jdbcType=INTEGER},
      endTime = #{record.endTime,jdbcType=INTEGER},
      isShow = #{record.isShow,jdbcType=INTEGER},
      isDeleted = #{record.isDeleted,jdbcType=INTEGER},
      updated = UNIX_TIMESTAMP(NOW()),
      type = #{record.type,jdbcType=INTEGER}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.lx.benefits.bean.entity.enterprmoduleinfo.EnterprModuleInfo">
    update  enterpr_module_info
    <set>
      <if test="customId != null">
        customId = #{customId,jdbcType=BIGINT},
      </if>
      <if test="moduleName != null">
        moduleName = #{moduleName,jdbcType=VARCHAR},
      </if>
      <if test="moduleNameEn != null">
        moduleNameEn = #{moduleNameEn,jdbcType=VARCHAR},
      </if>
      <if test="moduleLink != null">
        moduleLink = #{moduleLink,jdbcType=VARCHAR},
      </if>
      <if test="modulePic != null">
        modulePic = #{modulePic,jdbcType=VARCHAR},
      </if>
      <if test="background != null">
        background = #{background,jdbcType=VARCHAR},
      </if>
      <if test="selectedBackground != null">
        selectedBackground = #{selectedBackground,jdbcType=VARCHAR},
      </if>
      <if test="moduleSort != null">
        moduleSort = #{moduleSort,jdbcType=INTEGER},
      </if>
      <if test="startTime != null">
        startTime = #{startTime,jdbcType=INTEGER},
      </if>
      <if test="endTime != null">
        endTime = #{endTime,jdbcType=INTEGER},
      </if>
      <if test="isShow != null">
        isShow = #{isShow,jdbcType=INTEGER},
      </if>
      <if test="isDeleted != null">
        isDeleted = #{isDeleted,jdbcType=INTEGER},
      </if>
      <if test="type != null">
        type = #{type,jdbcType=INTEGER},
      </if>
      updated = UNIX_TIMESTAMP(NOW())
    </set>
    where moduleId = #{moduleId,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.lx.benefits.bean.entity.enterprmoduleinfo.EnterprModuleInfo">
    update  enterpr_module_info
    set customId = #{customId,jdbcType=BIGINT},
      moduleName = #{moduleName,jdbcType=VARCHAR},
      moduleNameEn = #{moduleNameEn,jdbcType=VARCHAR},
      moduleLink = #{moduleLink,jdbcType=VARCHAR},
      modulePic = #{modulePic,jdbcType=VARCHAR},
      background = #{background,jdbcType=VARCHAR},
      selectedBackground = #{selectedBackground,jdbcType=VARCHAR},
      moduleSort = #{moduleSort,jdbcType=INTEGER},
      startTime = #{startTime,jdbcType=INTEGER},
      endTime = #{endTime,jdbcType=INTEGER},
      isDeleted = #{isDeleted,jdbcType=TINYINT},
      updated = UNIX_TIMESTAMP(NOW()),
      type = #{type,jdbcType=TINYINT}
    where moduleId = #{moduleId,jdbcType=BIGINT}
  </update>
</mapper>