<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.lx.benefits.mapper.agent.AgentWalletMapper">
  <resultMap id="BaseResultMap" type="com.lx.benefits.bean.entity.agent.AgentWallet">
    <id column="agent_id" jdbcType="INTEGER" property="agentId" />
    <result column="cash_total" jdbcType="DECIMAL" property="cashTotal" />
    <result column="history_cash_total" jdbcType="DECIMAL" property="historyCashTotal" />
    <result column="check_time" jdbcType="TIMESTAMP" property="checkTime" />
    <result column="status" jdbcType="INTEGER" property="status" />
    <result column="update_time" jdbcType="TIMESTAMP" property="updateTime" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    agent_id, cash_total, history_cash_total, check_time, status, update_time
  </sql>
  <select id="selectByExample" parameterType="com.lx.benefits.bean.entity.agent.AgentWalletCondition" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from agent_wallet
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
    <if test="limit != null">
      <if test="offset != null">
        limit ${offset}, ${limit}
      </if>
      <if test="offset == null">
        limit ${limit}
      </if>
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from agent_wallet
    where agent_id = #{agentId,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from agent_wallet
    where agent_id = #{agentId,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.lx.benefits.bean.entity.agent.AgentWalletCondition">
    delete from agent_wallet
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.lx.benefits.bean.entity.agent.AgentWallet">
    insert into agent_wallet (agent_id, cash_total, history_cash_total, 
      check_time, status, update_time
      )
    values (#{agentId,jdbcType=INTEGER}, #{cashTotal,jdbcType=DECIMAL}, #{historyCashTotal,jdbcType=DECIMAL}, 
      #{checkTime,jdbcType=TIMESTAMP}, #{status,jdbcType=INTEGER}, #{updateTime,jdbcType=TIMESTAMP}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.lx.benefits.bean.entity.agent.AgentWallet">
    insert into agent_wallet
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="agentId != null">
        agent_id,
      </if>
      <if test="cashTotal != null">
        cash_total,
      </if>
      <if test="historyCashTotal != null">
        history_cash_total,
      </if>
      <if test="checkTime != null">
        check_time,
      </if>
      <if test="status != null">
        status,
      </if>
      <if test="updateTime != null">
        update_time,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="agentId != null">
        #{agentId,jdbcType=INTEGER},
      </if>
      <if test="cashTotal != null">
        #{cashTotal,jdbcType=DECIMAL},
      </if>
      <if test="historyCashTotal != null">
        #{historyCashTotal,jdbcType=DECIMAL},
      </if>
      <if test="checkTime != null">
        #{checkTime,jdbcType=TIMESTAMP},
      </if>
      <if test="status != null">
        #{status,jdbcType=INTEGER},
      </if>
      <if test="updateTime != null">
        #{updateTime,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.lx.benefits.bean.entity.agent.AgentWalletCondition" resultType="java.lang.Long">
    select count(*) from agent_wallet
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update agent_wallet
    <set>
      <if test="record.agentId != null">
        agent_id = #{record.agentId,jdbcType=INTEGER},
      </if>
      <if test="record.cashTotal != null">
        cash_total = #{record.cashTotal,jdbcType=DECIMAL},
      </if>
      <if test="record.historyCashTotal != null">
        history_cash_total = #{record.historyCashTotal,jdbcType=DECIMAL},
      </if>
      <if test="record.checkTime != null">
        check_time = #{record.checkTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.status != null">
        status = #{record.status,jdbcType=INTEGER},
      </if>
      <if test="record.updateTime != null">
        update_time = #{record.updateTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update agent_wallet
    set agent_id = #{record.agentId,jdbcType=INTEGER},
      cash_total = #{record.cashTotal,jdbcType=DECIMAL},
      history_cash_total = #{record.historyCashTotal,jdbcType=DECIMAL},
      check_time = #{record.checkTime,jdbcType=TIMESTAMP},
      status = #{record.status,jdbcType=INTEGER},
      update_time = #{record.updateTime,jdbcType=TIMESTAMP}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.lx.benefits.bean.entity.agent.AgentWallet">
    update agent_wallet
    <set>
      <if test="cashTotal != null">
        cash_total = #{cashTotal,jdbcType=DECIMAL},
      </if>
      <if test="historyCashTotal != null">
        history_cash_total = #{historyCashTotal,jdbcType=DECIMAL},
      </if>
      <if test="checkTime != null">
        check_time = #{checkTime,jdbcType=TIMESTAMP},
      </if>
      <if test="status != null">
        status = #{status,jdbcType=INTEGER},
      </if>
      <if test="updateTime != null">
        update_time = #{updateTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    where agent_id = #{agentId,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.lx.benefits.bean.entity.agent.AgentWallet">
    update agent_wallet
    set cash_total = #{cashTotal,jdbcType=DECIMAL},
      history_cash_total = #{historyCashTotal,jdbcType=DECIMAL},
      check_time = #{checkTime,jdbcType=TIMESTAMP},
      status = #{status,jdbcType=INTEGER},
      update_time = #{updateTime,jdbcType=TIMESTAMP}
    where agent_id = #{agentId,jdbcType=INTEGER}
  </update>
</mapper>