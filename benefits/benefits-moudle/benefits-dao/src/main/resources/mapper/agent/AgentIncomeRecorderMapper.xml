<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.lx.benefits.mapper.agent.AgentIncomeRecorderMapper">
  <resultMap id="BaseResultMap" type="com.lx.benefits.bean.entity.agent.AgentIncomeRecorder">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="agent_id" jdbcType="INTEGER" property="agentId" />
    <result column="voucher_number" jdbcType="VARCHAR" property="voucherNumber" />
    <result column="pay_order_number" jdbcType="VARCHAR" property="payOrderNumber" />
    <result column="cash_amount" jdbcType="DECIMAL" property="cashAmount" />
    <result column="profit_proportion" jdbcType="DECIMAL" property="profitProportion" />
    <result column="type" jdbcType="INTEGER" property="type" />
    <result column="enterpr_id" jdbcType="BIGINT" property="enterprId" />
    <result column="create_time" jdbcType="TIMESTAMP" property="createTime" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    id, agent_id, voucher_number, pay_order_number, cash_amount, profit_proportion, type, 
    enterpr_id, create_time
  </sql>
  <select id="selectByExample" parameterType="com.lx.benefits.bean.entity.agent.AgentIncomeRecorderCondition" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from agent_income_recorder
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
    <if test="limit != null">
      <if test="offset != null">
        limit ${offset}, ${limit}
      </if>
      <if test="offset == null">
        limit ${limit}
      </if>
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from agent_income_recorder
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from agent_income_recorder
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.lx.benefits.bean.entity.agent.AgentIncomeRecorderCondition">
    delete from agent_income_recorder
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.lx.benefits.bean.entity.agent.AgentIncomeRecorder">
    insert into agent_income_recorder (id, agent_id, voucher_number, 
      pay_order_number, cash_amount, profit_proportion, 
      type, enterpr_id, create_time
      )
    values (#{id,jdbcType=INTEGER}, #{agentId,jdbcType=INTEGER}, #{voucherNumber,jdbcType=VARCHAR}, 
      #{payOrderNumber,jdbcType=VARCHAR}, #{cashAmount,jdbcType=DECIMAL}, #{profitProportion,jdbcType=DECIMAL}, 
      #{type,jdbcType=INTEGER}, #{enterprId,jdbcType=BIGINT}, #{createTime,jdbcType=TIMESTAMP}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.lx.benefits.bean.entity.agent.AgentIncomeRecorder">
    insert into agent_income_recorder
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="agentId != null">
        agent_id,
      </if>
      <if test="voucherNumber != null">
        voucher_number,
      </if>
      <if test="payOrderNumber != null">
        pay_order_number,
      </if>
      <if test="cashAmount != null">
        cash_amount,
      </if>
      <if test="profitProportion != null">
        profit_proportion,
      </if>
      <if test="type != null">
        type,
      </if>
      <if test="enterprId != null">
        enterpr_id,
      </if>
      <if test="createTime != null">
        create_time,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=INTEGER},
      </if>
      <if test="agentId != null">
        #{agentId,jdbcType=INTEGER},
      </if>
      <if test="voucherNumber != null">
        #{voucherNumber,jdbcType=VARCHAR},
      </if>
      <if test="payOrderNumber != null">
        #{payOrderNumber,jdbcType=VARCHAR},
      </if>
      <if test="cashAmount != null">
        #{cashAmount,jdbcType=DECIMAL},
      </if>
      <if test="profitProportion != null">
        #{profitProportion,jdbcType=DECIMAL},
      </if>
      <if test="type != null">
        #{type,jdbcType=INTEGER},
      </if>
      <if test="enterprId != null">
        #{enterprId,jdbcType=BIGINT},
      </if>
      <if test="createTime != null">
        #{createTime,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.lx.benefits.bean.entity.agent.AgentIncomeRecorderCondition" resultType="java.lang.Long">
    select count(*) from agent_income_recorder
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update agent_income_recorder
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.agentId != null">
        agent_id = #{record.agentId,jdbcType=INTEGER},
      </if>
      <if test="record.voucherNumber != null">
        voucher_number = #{record.voucherNumber,jdbcType=VARCHAR},
      </if>
      <if test="record.payOrderNumber != null">
        pay_order_number = #{record.payOrderNumber,jdbcType=VARCHAR},
      </if>
      <if test="record.cashAmount != null">
        cash_amount = #{record.cashAmount,jdbcType=DECIMAL},
      </if>
      <if test="record.profitProportion != null">
        profit_proportion = #{record.profitProportion,jdbcType=DECIMAL},
      </if>
      <if test="record.type != null">
        type = #{record.type,jdbcType=INTEGER},
      </if>
      <if test="record.enterprId != null">
        enterpr_id = #{record.enterprId,jdbcType=BIGINT},
      </if>
      <if test="record.createTime != null">
        create_time = #{record.createTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update agent_income_recorder
    set id = #{record.id,jdbcType=INTEGER},
      agent_id = #{record.agentId,jdbcType=INTEGER},
      voucher_number = #{record.voucherNumber,jdbcType=VARCHAR},
      pay_order_number = #{record.payOrderNumber,jdbcType=VARCHAR},
      cash_amount = #{record.cashAmount,jdbcType=DECIMAL},
      profit_proportion = #{record.profitProportion,jdbcType=DECIMAL},
      type = #{record.type,jdbcType=INTEGER},
      enterpr_id = #{record.enterprId,jdbcType=BIGINT},
      create_time = #{record.createTime,jdbcType=TIMESTAMP}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.lx.benefits.bean.entity.agent.AgentIncomeRecorder">
    update agent_income_recorder
    <set>
      <if test="agentId != null">
        agent_id = #{agentId,jdbcType=INTEGER},
      </if>
      <if test="voucherNumber != null">
        voucher_number = #{voucherNumber,jdbcType=VARCHAR},
      </if>
      <if test="payOrderNumber != null">
        pay_order_number = #{payOrderNumber,jdbcType=VARCHAR},
      </if>
      <if test="cashAmount != null">
        cash_amount = #{cashAmount,jdbcType=DECIMAL},
      </if>
      <if test="profitProportion != null">
        profit_proportion = #{profitProportion,jdbcType=DECIMAL},
      </if>
      <if test="type != null">
        type = #{type,jdbcType=INTEGER},
      </if>
      <if test="enterprId != null">
        enterpr_id = #{enterprId,jdbcType=BIGINT},
      </if>
      <if test="createTime != null">
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.lx.benefits.bean.entity.agent.AgentIncomeRecorder">
    update agent_income_recorder
    set agent_id = #{agentId,jdbcType=INTEGER},
      voucher_number = #{voucherNumber,jdbcType=VARCHAR},
      pay_order_number = #{payOrderNumber,jdbcType=VARCHAR},
      cash_amount = #{cashAmount,jdbcType=DECIMAL},
      profit_proportion = #{profitProportion,jdbcType=DECIMAL},
      type = #{type,jdbcType=INTEGER},
      enterpr_id = #{enterprId,jdbcType=BIGINT},
      create_time = #{createTime,jdbcType=TIMESTAMP}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>