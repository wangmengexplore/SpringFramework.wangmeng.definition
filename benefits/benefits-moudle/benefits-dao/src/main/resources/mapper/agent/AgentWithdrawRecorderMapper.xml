<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.lx.benefits.mapper.agent.AgentWithdrawRecorderMapper">
  <resultMap id="BaseResultMap" type="com.lx.benefits.bean.entity.agent.AgentWithdrawRecorder">
    <id column="cash_number" jdbcType="VARCHAR" property="cashNumber" />
    <result column="agent_id" jdbcType="INTEGER" property="agentId" />
    <result column="cash_amount" jdbcType="DECIMAL" property="cashAmount" />
    <result column="check_status" jdbcType="INTEGER" property="checkStatus" />
    <result column="check_user" jdbcType="VARCHAR" property="checkUser" />
    <result column="check_time" jdbcType="TIMESTAMP" property="checkTime" />
    <result column="pay_voucher" jdbcType="VARCHAR" property="payVoucher" />
    <result column="check_remark" jdbcType="VARCHAR" property="checkRemark" />
    <result column="bank_name" jdbcType="VARCHAR" property="bankName" />
    <result column="bank_card_number" jdbcType="VARCHAR" property="bankCardNumber" />
    <result column="apply_time" jdbcType="TIMESTAMP" property="applyTime" />
    <result column="update_time" jdbcType="TIMESTAMP" property="updateTime" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    cash_number, agent_id, cash_amount, check_status, check_user, check_time, pay_voucher, 
    check_remark, bank_name, bank_card_number, apply_time, update_time
  </sql>
  <select id="selectByExample" parameterType="com.lx.benefits.bean.entity.agent.AgentWithdrawRecorderCondition" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from agent_withdraw_recorder
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
    <if test="limit != null">
      <if test="offset != null">
        limit ${offset}, ${limit}
      </if>
      <if test="offset == null">
        limit ${limit}
      </if>
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.String" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from agent_withdraw_recorder
    where cash_number = #{cashNumber,jdbcType=VARCHAR}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.String">
    delete from agent_withdraw_recorder
    where cash_number = #{cashNumber,jdbcType=VARCHAR}
  </delete>
  <delete id="deleteByExample" parameterType="com.lx.benefits.bean.entity.agent.AgentWithdrawRecorderCondition">
    delete from agent_withdraw_recorder
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.lx.benefits.bean.entity.agent.AgentWithdrawRecorder">
    insert into agent_withdraw_recorder (cash_number, agent_id, cash_amount, 
      check_status, check_user, check_time, 
      pay_voucher, check_remark, bank_name, 
      bank_card_number, apply_time, update_time
      )
    values (#{cashNumber,jdbcType=VARCHAR}, #{agentId,jdbcType=INTEGER}, #{cashAmount,jdbcType=DECIMAL}, 
      #{checkStatus,jdbcType=INTEGER}, #{checkUser,jdbcType=VARCHAR}, #{checkTime,jdbcType=TIMESTAMP}, 
      #{payVoucher,jdbcType=VARCHAR}, #{checkRemark,jdbcType=VARCHAR}, #{bankName,jdbcType=VARCHAR}, 
      #{bankCardNumber,jdbcType=VARCHAR}, #{applyTime,jdbcType=TIMESTAMP}, #{updateTime,jdbcType=TIMESTAMP}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.lx.benefits.bean.entity.agent.AgentWithdrawRecorder">
    insert into agent_withdraw_recorder
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="cashNumber != null">
        cash_number,
      </if>
      <if test="agentId != null">
        agent_id,
      </if>
      <if test="cashAmount != null">
        cash_amount,
      </if>
      <if test="checkStatus != null">
        check_status,
      </if>
      <if test="checkUser != null">
        check_user,
      </if>
      <if test="checkTime != null">
        check_time,
      </if>
      <if test="payVoucher != null">
        pay_voucher,
      </if>
      <if test="checkRemark != null">
        check_remark,
      </if>
      <if test="bankName != null">
        bank_name,
      </if>
      <if test="bankCardNumber != null">
        bank_card_number,
      </if>
      <if test="applyTime != null">
        apply_time,
      </if>
      <if test="updateTime != null">
        update_time,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="cashNumber != null">
        #{cashNumber,jdbcType=VARCHAR},
      </if>
      <if test="agentId != null">
        #{agentId,jdbcType=INTEGER},
      </if>
      <if test="cashAmount != null">
        #{cashAmount,jdbcType=DECIMAL},
      </if>
      <if test="checkStatus != null">
        #{checkStatus,jdbcType=INTEGER},
      </if>
      <if test="checkUser != null">
        #{checkUser,jdbcType=VARCHAR},
      </if>
      <if test="checkTime != null">
        #{checkTime,jdbcType=TIMESTAMP},
      </if>
      <if test="payVoucher != null">
        #{payVoucher,jdbcType=VARCHAR},
      </if>
      <if test="checkRemark != null">
        #{checkRemark,jdbcType=VARCHAR},
      </if>
      <if test="bankName != null">
        #{bankName,jdbcType=VARCHAR},
      </if>
      <if test="bankCardNumber != null">
        #{bankCardNumber,jdbcType=VARCHAR},
      </if>
      <if test="applyTime != null">
        #{applyTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null">
        #{updateTime,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.lx.benefits.bean.entity.agent.AgentWithdrawRecorderCondition" resultType="java.lang.Long">
    select count(*) from agent_withdraw_recorder
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update agent_withdraw_recorder
    <set>
      <if test="record.cashNumber != null">
        cash_number = #{record.cashNumber,jdbcType=VARCHAR},
      </if>
      <if test="record.agentId != null">
        agent_id = #{record.agentId,jdbcType=INTEGER},
      </if>
      <if test="record.cashAmount != null">
        cash_amount = #{record.cashAmount,jdbcType=DECIMAL},
      </if>
      <if test="record.checkStatus != null">
        check_status = #{record.checkStatus,jdbcType=INTEGER},
      </if>
      <if test="record.checkUser != null">
        check_user = #{record.checkUser,jdbcType=VARCHAR},
      </if>
      <if test="record.checkTime != null">
        check_time = #{record.checkTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.payVoucher != null">
        pay_voucher = #{record.payVoucher,jdbcType=VARCHAR},
      </if>
      <if test="record.checkRemark != null">
        check_remark = #{record.checkRemark,jdbcType=VARCHAR},
      </if>
      <if test="record.bankName != null">
        bank_name = #{record.bankName,jdbcType=VARCHAR},
      </if>
      <if test="record.bankCardNumber != null">
        bank_card_number = #{record.bankCardNumber,jdbcType=VARCHAR},
      </if>
      <if test="record.applyTime != null">
        apply_time = #{record.applyTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.updateTime != null">
        update_time = #{record.updateTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update agent_withdraw_recorder
    set cash_number = #{record.cashNumber,jdbcType=VARCHAR},
      agent_id = #{record.agentId,jdbcType=INTEGER},
      cash_amount = #{record.cashAmount,jdbcType=DECIMAL},
      check_status = #{record.checkStatus,jdbcType=INTEGER},
      check_user = #{record.checkUser,jdbcType=VARCHAR},
      check_time = #{record.checkTime,jdbcType=TIMESTAMP},
      pay_voucher = #{record.payVoucher,jdbcType=VARCHAR},
      check_remark = #{record.checkRemark,jdbcType=VARCHAR},
      bank_name = #{record.bankName,jdbcType=VARCHAR},
      bank_card_number = #{record.bankCardNumber,jdbcType=VARCHAR},
      apply_time = #{record.applyTime,jdbcType=TIMESTAMP},
      update_time = #{record.updateTime,jdbcType=TIMESTAMP}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.lx.benefits.bean.entity.agent.AgentWithdrawRecorder">
    update agent_withdraw_recorder
    <set>
      <if test="agentId != null">
        agent_id = #{agentId,jdbcType=INTEGER},
      </if>
      <if test="cashAmount != null">
        cash_amount = #{cashAmount,jdbcType=DECIMAL},
      </if>
      <if test="checkStatus != null">
        check_status = #{checkStatus,jdbcType=INTEGER},
      </if>
      <if test="checkUser != null">
        check_user = #{checkUser,jdbcType=VARCHAR},
      </if>
      <if test="checkTime != null">
        check_time = #{checkTime,jdbcType=TIMESTAMP},
      </if>
      <if test="payVoucher != null">
        pay_voucher = #{payVoucher,jdbcType=VARCHAR},
      </if>
      <if test="checkRemark != null">
        check_remark = #{checkRemark,jdbcType=VARCHAR},
      </if>
      <if test="bankName != null">
        bank_name = #{bankName,jdbcType=VARCHAR},
      </if>
      <if test="bankCardNumber != null">
        bank_card_number = #{bankCardNumber,jdbcType=VARCHAR},
      </if>
      <if test="applyTime != null">
        apply_time = #{applyTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null">
        update_time = #{updateTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    where cash_number = #{cashNumber,jdbcType=VARCHAR}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.lx.benefits.bean.entity.agent.AgentWithdrawRecorder">
    update agent_withdraw_recorder
    set agent_id = #{agentId,jdbcType=INTEGER},
      cash_amount = #{cashAmount,jdbcType=DECIMAL},
      check_status = #{checkStatus,jdbcType=INTEGER},
      check_user = #{checkUser,jdbcType=VARCHAR},
      check_time = #{checkTime,jdbcType=TIMESTAMP},
      pay_voucher = #{payVoucher,jdbcType=VARCHAR},
      check_remark = #{checkRemark,jdbcType=VARCHAR},
      bank_name = #{bankName,jdbcType=VARCHAR},
      bank_card_number = #{bankCardNumber,jdbcType=VARCHAR},
      apply_time = #{applyTime,jdbcType=TIMESTAMP},
      update_time = #{updateTime,jdbcType=TIMESTAMP}
    where cash_number = #{cashNumber,jdbcType=VARCHAR}
  </update>
</mapper>