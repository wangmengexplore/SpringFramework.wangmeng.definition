<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.lx.benefits.mapper.agent.AgentAccountCheckingRecorderMapper">
  <resultMap id="BaseResultMap" type="com.lx.benefits.bean.entity.agent.AgentAccountCheckingRecorder">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="agent_type" jdbcType="INTEGER" property="agentType" />
    <result column="agent_name" jdbcType="VARCHAR" property="agentName" />
    <result column="agent_identity_id" jdbcType="VARCHAR" property="agentIdentityId" />
    <result column="agent_register_address" jdbcType="VARCHAR" property="agentRegisterAddress" />
    <result column="certify_image_urls" jdbcType="VARCHAR" property="certifyImageUrls" />
    <result column="contact_user" jdbcType="VARCHAR" property="contactUser" />
    <result column="contact_phone" jdbcType="VARCHAR" property="contactPhone" />
    <result column="contact_email" jdbcType="VARCHAR" property="contactEmail" />
    <result column="add_user" jdbcType="VARCHAR" property="addUser" />
    <result column="add_time" jdbcType="TIMESTAMP" property="addTime" />
    <result column="check_status" jdbcType="INTEGER" property="checkStatus" />
    <result column="check_user" jdbcType="VARCHAR" property="checkUser" />
    <result column="check_time" jdbcType="TIMESTAMP" property="checkTime" />
    <result column="login_name" jdbcType="VARCHAR" property="loginName" />
    <result column="check_remark" jdbcType="VARCHAR" property="checkRemark" />
    <result column="contract_number" jdbcType="VARCHAR" property="contractNumber" />
    <result column="agent_level" jdbcType="INTEGER" property="agentLevel" />
    <result column="parent_id" jdbcType="INTEGER" property="parentId" />
    <result column="bind_time" jdbcType="TIMESTAMP" property="bindTime" />
    <result column="registered_type" jdbcType="VARCHAR" property="registeredType" />
    <result column="deleted" jdbcType="INTEGER" property="deleted" />
    <result column="update_time" jdbcType="TIMESTAMP" property="updateTime" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    id, agent_type, agent_name, agent_identity_id, agent_register_address, certify_image_urls, 
    contact_user, contact_phone, contact_email, add_user, add_time, check_status, check_user, 
    check_time, login_name, check_remark, contract_number, agent_level, parent_id, bind_time, 
    registered_type, deleted, update_time
  </sql>
  <select id="selectByExample" parameterType="com.lx.benefits.bean.entity.agent.AgentAccountCheckingRecorderCondition" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from agent_account_checking_recorder
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
    <if test="limit != null">
      <if test="offset != null">
        limit ${offset}, ${limit}
      </if>
      <if test="offset == null">
        limit ${limit}
      </if>
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from agent_account_checking_recorder
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from agent_account_checking_recorder
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.lx.benefits.bean.entity.agent.AgentAccountCheckingRecorderCondition">
    delete from agent_account_checking_recorder
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.lx.benefits.bean.entity.agent.AgentAccountCheckingRecorder">
    insert into agent_account_checking_recorder (id, agent_type, agent_name, 
      agent_identity_id, agent_register_address, 
      certify_image_urls, contact_user, contact_phone, 
      contact_email, add_user, add_time, 
      check_status, check_user, check_time, 
      login_name, check_remark, contract_number, 
      agent_level, parent_id, bind_time, 
      registered_type, deleted, update_time
      )
    values (#{id,jdbcType=INTEGER}, #{agentType,jdbcType=INTEGER}, #{agentName,jdbcType=VARCHAR}, 
      #{agentIdentityId,jdbcType=VARCHAR}, #{agentRegisterAddress,jdbcType=VARCHAR}, 
      #{certifyImageUrls,jdbcType=VARCHAR}, #{contactUser,jdbcType=VARCHAR}, #{contactPhone,jdbcType=VARCHAR}, 
      #{contactEmail,jdbcType=VARCHAR}, #{addUser,jdbcType=VARCHAR}, #{addTime,jdbcType=TIMESTAMP}, 
      #{checkStatus,jdbcType=INTEGER}, #{checkUser,jdbcType=VARCHAR}, #{checkTime,jdbcType=TIMESTAMP}, 
      #{loginName,jdbcType=VARCHAR}, #{checkRemark,jdbcType=VARCHAR}, #{contractNumber,jdbcType=VARCHAR}, 
      #{agentLevel,jdbcType=INTEGER}, #{parentId,jdbcType=INTEGER}, #{bindTime,jdbcType=TIMESTAMP}, 
      #{registeredType,jdbcType=VARCHAR}, #{deleted,jdbcType=INTEGER}, #{updateTime,jdbcType=TIMESTAMP}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.lx.benefits.bean.entity.agent.AgentAccountCheckingRecorder">
    insert into agent_account_checking_recorder
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="agentType != null">
        agent_type,
      </if>
      <if test="agentName != null">
        agent_name,
      </if>
      <if test="agentIdentityId != null">
        agent_identity_id,
      </if>
      <if test="agentRegisterAddress != null">
        agent_register_address,
      </if>
      <if test="certifyImageUrls != null">
        certify_image_urls,
      </if>
      <if test="contactUser != null">
        contact_user,
      </if>
      <if test="contactPhone != null">
        contact_phone,
      </if>
      <if test="contactEmail != null">
        contact_email,
      </if>
      <if test="addUser != null">
        add_user,
      </if>
      <if test="addTime != null">
        add_time,
      </if>
      <if test="checkStatus != null">
        check_status,
      </if>
      <if test="checkUser != null">
        check_user,
      </if>
      <if test="checkTime != null">
        check_time,
      </if>
      <if test="loginName != null">
        login_name,
      </if>
      <if test="checkRemark != null">
        check_remark,
      </if>
      <if test="contractNumber != null">
        contract_number,
      </if>
      <if test="agentLevel != null">
        agent_level,
      </if>
      <if test="parentId != null">
        parent_id,
      </if>
      <if test="bindTime != null">
        bind_time,
      </if>
      <if test="registeredType != null">
        registered_type,
      </if>
      <if test="deleted != null">
        deleted,
      </if>
      <if test="updateTime != null">
        update_time,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=INTEGER},
      </if>
      <if test="agentType != null">
        #{agentType,jdbcType=INTEGER},
      </if>
      <if test="agentName != null">
        #{agentName,jdbcType=VARCHAR},
      </if>
      <if test="agentIdentityId != null">
        #{agentIdentityId,jdbcType=VARCHAR},
      </if>
      <if test="agentRegisterAddress != null">
        #{agentRegisterAddress,jdbcType=VARCHAR},
      </if>
      <if test="certifyImageUrls != null">
        #{certifyImageUrls,jdbcType=VARCHAR},
      </if>
      <if test="contactUser != null">
        #{contactUser,jdbcType=VARCHAR},
      </if>
      <if test="contactPhone != null">
        #{contactPhone,jdbcType=VARCHAR},
      </if>
      <if test="contactEmail != null">
        #{contactEmail,jdbcType=VARCHAR},
      </if>
      <if test="addUser != null">
        #{addUser,jdbcType=VARCHAR},
      </if>
      <if test="addTime != null">
        #{addTime,jdbcType=TIMESTAMP},
      </if>
      <if test="checkStatus != null">
        #{checkStatus,jdbcType=INTEGER},
      </if>
      <if test="checkUser != null">
        #{checkUser,jdbcType=VARCHAR},
      </if>
      <if test="checkTime != null">
        #{checkTime,jdbcType=TIMESTAMP},
      </if>
      <if test="loginName != null">
        #{loginName,jdbcType=VARCHAR},
      </if>
      <if test="checkRemark != null">
        #{checkRemark,jdbcType=VARCHAR},
      </if>
      <if test="contractNumber != null">
        #{contractNumber,jdbcType=VARCHAR},
      </if>
      <if test="agentLevel != null">
        #{agentLevel,jdbcType=INTEGER},
      </if>
      <if test="parentId != null">
        #{parentId,jdbcType=INTEGER},
      </if>
      <if test="bindTime != null">
        #{bindTime,jdbcType=TIMESTAMP},
      </if>
      <if test="registeredType != null">
        #{registeredType,jdbcType=VARCHAR},
      </if>
      <if test="deleted != null">
        #{deleted,jdbcType=INTEGER},
      </if>
      <if test="updateTime != null">
        #{updateTime,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.lx.benefits.bean.entity.agent.AgentAccountCheckingRecorderCondition" resultType="java.lang.Long">
    select count(*) from agent_account_checking_recorder
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update agent_account_checking_recorder
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.agentType != null">
        agent_type = #{record.agentType,jdbcType=INTEGER},
      </if>
      <if test="record.agentName != null">
        agent_name = #{record.agentName,jdbcType=VARCHAR},
      </if>
      <if test="record.agentIdentityId != null">
        agent_identity_id = #{record.agentIdentityId,jdbcType=VARCHAR},
      </if>
      <if test="record.agentRegisterAddress != null">
        agent_register_address = #{record.agentRegisterAddress,jdbcType=VARCHAR},
      </if>
      <if test="record.certifyImageUrls != null">
        certify_image_urls = #{record.certifyImageUrls,jdbcType=VARCHAR},
      </if>
      <if test="record.contactUser != null">
        contact_user = #{record.contactUser,jdbcType=VARCHAR},
      </if>
      <if test="record.contactPhone != null">
        contact_phone = #{record.contactPhone,jdbcType=VARCHAR},
      </if>
      <if test="record.contactEmail != null">
        contact_email = #{record.contactEmail,jdbcType=VARCHAR},
      </if>
      <if test="record.addUser != null">
        add_user = #{record.addUser,jdbcType=VARCHAR},
      </if>
      <if test="record.addTime != null">
        add_time = #{record.addTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.checkStatus != null">
        check_status = #{record.checkStatus,jdbcType=INTEGER},
      </if>
      <if test="record.checkUser != null">
        check_user = #{record.checkUser,jdbcType=VARCHAR},
      </if>
      <if test="record.checkTime != null">
        check_time = #{record.checkTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.loginName != null">
        login_name = #{record.loginName,jdbcType=VARCHAR},
      </if>
      <if test="record.checkRemark != null">
        check_remark = #{record.checkRemark,jdbcType=VARCHAR},
      </if>
      <if test="record.contractNumber != null">
        contract_number = #{record.contractNumber,jdbcType=VARCHAR},
      </if>
      <if test="record.agentLevel != null">
        agent_level = #{record.agentLevel,jdbcType=INTEGER},
      </if>
      <if test="record.parentId != null">
        parent_id = #{record.parentId,jdbcType=INTEGER},
      </if>
      <if test="record.bindTime != null">
        bind_time = #{record.bindTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.registeredType != null">
        registered_type = #{record.registeredType,jdbcType=VARCHAR},
      </if>
      <if test="record.deleted != null">
        deleted = #{record.deleted,jdbcType=INTEGER},
      </if>
      <if test="record.updateTime != null">
        update_time = #{record.updateTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update agent_account_checking_recorder
    set id = #{record.id,jdbcType=INTEGER},
      agent_type = #{record.agentType,jdbcType=INTEGER},
      agent_name = #{record.agentName,jdbcType=VARCHAR},
      agent_identity_id = #{record.agentIdentityId,jdbcType=VARCHAR},
      agent_register_address = #{record.agentRegisterAddress,jdbcType=VARCHAR},
      certify_image_urls = #{record.certifyImageUrls,jdbcType=VARCHAR},
      contact_user = #{record.contactUser,jdbcType=VARCHAR},
      contact_phone = #{record.contactPhone,jdbcType=VARCHAR},
      contact_email = #{record.contactEmail,jdbcType=VARCHAR},
      add_user = #{record.addUser,jdbcType=VARCHAR},
      add_time = #{record.addTime,jdbcType=TIMESTAMP},
      check_status = #{record.checkStatus,jdbcType=INTEGER},
      check_user = #{record.checkUser,jdbcType=VARCHAR},
      check_time = #{record.checkTime,jdbcType=TIMESTAMP},
      login_name = #{record.loginName,jdbcType=VARCHAR},
      check_remark = #{record.checkRemark,jdbcType=VARCHAR},
      contract_number = #{record.contractNumber,jdbcType=VARCHAR},
      agent_level = #{record.agentLevel,jdbcType=INTEGER},
      parent_id = #{record.parentId,jdbcType=INTEGER},
      bind_time = #{record.bindTime,jdbcType=TIMESTAMP},
      registered_type = #{record.registeredType,jdbcType=VARCHAR},
      deleted = #{record.deleted,jdbcType=INTEGER},
      update_time = #{record.updateTime,jdbcType=TIMESTAMP}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.lx.benefits.bean.entity.agent.AgentAccountCheckingRecorder">
    update agent_account_checking_recorder
    <set>
      <if test="agentType != null">
        agent_type = #{agentType,jdbcType=INTEGER},
      </if>
      <if test="agentName != null">
        agent_name = #{agentName,jdbcType=VARCHAR},
      </if>
      <if test="agentIdentityId != null">
        agent_identity_id = #{agentIdentityId,jdbcType=VARCHAR},
      </if>
      <if test="agentRegisterAddress != null">
        agent_register_address = #{agentRegisterAddress,jdbcType=VARCHAR},
      </if>
      <if test="certifyImageUrls != null">
        certify_image_urls = #{certifyImageUrls,jdbcType=VARCHAR},
      </if>
      <if test="contactUser != null">
        contact_user = #{contactUser,jdbcType=VARCHAR},
      </if>
      <if test="contactPhone != null">
        contact_phone = #{contactPhone,jdbcType=VARCHAR},
      </if>
      <if test="contactEmail != null">
        contact_email = #{contactEmail,jdbcType=VARCHAR},
      </if>
      <if test="addUser != null">
        add_user = #{addUser,jdbcType=VARCHAR},
      </if>
      <if test="addTime != null">
        add_time = #{addTime,jdbcType=TIMESTAMP},
      </if>
      <if test="checkStatus != null">
        check_status = #{checkStatus,jdbcType=INTEGER},
      </if>
      <if test="checkUser != null">
        check_user = #{checkUser,jdbcType=VARCHAR},
      </if>
      <if test="checkTime != null">
        check_time = #{checkTime,jdbcType=TIMESTAMP},
      </if>
      <if test="loginName != null">
        login_name = #{loginName,jdbcType=VARCHAR},
      </if>
      <if test="checkRemark != null">
        check_remark = #{checkRemark,jdbcType=VARCHAR},
      </if>
      <if test="contractNumber != null">
        contract_number = #{contractNumber,jdbcType=VARCHAR},
      </if>
      <if test="agentLevel != null">
        agent_level = #{agentLevel,jdbcType=INTEGER},
      </if>
      <if test="parentId != null">
        parent_id = #{parentId,jdbcType=INTEGER},
      </if>
      <if test="bindTime != null">
        bind_time = #{bindTime,jdbcType=TIMESTAMP},
      </if>
      <if test="registeredType != null">
        registered_type = #{registeredType,jdbcType=VARCHAR},
      </if>
      <if test="deleted != null">
        deleted = #{deleted,jdbcType=INTEGER},
      </if>
      <if test="updateTime != null">
        update_time = #{updateTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.lx.benefits.bean.entity.agent.AgentAccountCheckingRecorder">
    update agent_account_checking_recorder
    set agent_type = #{agentType,jdbcType=INTEGER},
      agent_name = #{agentName,jdbcType=VARCHAR},
      agent_identity_id = #{agentIdentityId,jdbcType=VARCHAR},
      agent_register_address = #{agentRegisterAddress,jdbcType=VARCHAR},
      certify_image_urls = #{certifyImageUrls,jdbcType=VARCHAR},
      contact_user = #{contactUser,jdbcType=VARCHAR},
      contact_phone = #{contactPhone,jdbcType=VARCHAR},
      contact_email = #{contactEmail,jdbcType=VARCHAR},
      add_user = #{addUser,jdbcType=VARCHAR},
      add_time = #{addTime,jdbcType=TIMESTAMP},
      check_status = #{checkStatus,jdbcType=INTEGER},
      check_user = #{checkUser,jdbcType=VARCHAR},
      check_time = #{checkTime,jdbcType=TIMESTAMP},
      login_name = #{loginName,jdbcType=VARCHAR},
      check_remark = #{checkRemark,jdbcType=VARCHAR},
      contract_number = #{contractNumber,jdbcType=VARCHAR},
      agent_level = #{agentLevel,jdbcType=INTEGER},
      parent_id = #{parentId,jdbcType=INTEGER},
      bind_time = #{bindTime,jdbcType=TIMESTAMP},
      registered_type = #{registeredType,jdbcType=VARCHAR},
      deleted = #{deleted,jdbcType=INTEGER},
      update_time = #{updateTime,jdbcType=TIMESTAMP}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>