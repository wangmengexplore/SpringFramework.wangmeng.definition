<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.lx.benefits.mapper.card.CardBatchRecorderMapper">
  <select id="seletMaxCustomerBatchId" resultType="int">
  	select IFNULL(MAX(customer_batch_id),0)
  	from card_batch_recorder
  	where  customer_id = #{customerId}
  </select>
  <select id="countCardBatches" resultType="int">
		select count(1) 
		from card_batch_recorder batchRecorder
		<if test="startTime!=null or endTime!=null">
			inner join card_sale_order saleOrder on batchRecorder.sale_order_id=saleOrder.sale_order_id
				<if test="startTime!=null">
					and saleOrder.create_time >= #{startTime}
				</if>
				<if test="endTime!=null">
					and saleOrder.create_time &lt;= #{endTime}
				</if>
		</if>
		<if test="status!=null">
			where batchRecorder.status = #{status}
		</if>
	</select>
	<select id="selectCardBatches" resultType="com.lx.benefits.bean.vo.card.CardBatchBean">
		select batchRecorder.batch_id as batchId,batchRecorder.customer_id as customerId,
			 saleOrder.create_time as orderCreateTime, sum(saleOrderItem.amount*saleOrderItem.num) as totalAmount,
			 sum(saleOrderItem.num) as totalCount, saleOrder.is_custom_card as isCustomCard, batchRecorder.status
		from card_batch_recorder batchRecorder
			inner join card_sale_order saleOrder on batchRecorder.sale_order_id=saleOrder.sale_order_id
			<if test="startTime!=null or endTime!=null">
				<if test="startTime!=null">
					and saleOrder.create_time >= #{startTime}
				</if>
				<if test="endTime!=null">
					and saleOrder.create_time &lt;= #{endTime}
				</if>
			</if>
			inner join card_sale_order_item saleOrderItem on saleOrderItem.sale_order_id=saleOrder.sale_order_id
		<if test="status!=null">
			where batchRecorder.status = #{status}
		</if>
		group by batchId
		order by batchId desc
		limit #{pageBean.offset}, #{pageBean.pageSize}
	</select>
</mapper>