<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.lx.benefits.mapper.card.CardSaleOrderMapper">
  <resultMap id="BaseResultMap" type="com.lx.benefits.bean.entity.card.CardSaleOrder">
    <id column="sale_order_id" jdbcType="INTEGER" property="saleOrderId" />
    <result column="customer_id" jdbcType="BIGINT" property="customerId" />
    <result column="bind_enterpr_id" jdbcType="BIGINT" property="bindEnterprId" />
    <result column="is_custom_card" jdbcType="TINYINT" property="isCustomCard" />
    <result column="pay_type" jdbcType="INTEGER" property="payType" />
    <result column="discount_on_sale" jdbcType="DECIMAL" property="discountOnSale" />
    <result column="sum_payable" jdbcType="DECIMAL" property="sumPayable" />
    <result column="paid_amount" jdbcType="DECIMAL" property="paidAmount" />
    <result column="create_user" jdbcType="VARCHAR" property="createUser" />
    <result column="create_time" jdbcType="TIMESTAMP" property="createTime" />
    <result column="status" jdbcType="INTEGER" property="status" />
    <result column="verify_user" jdbcType="VARCHAR" property="verifyUser" />
    <result column="verify_time" jdbcType="TIMESTAMP" property="verifyTime" />
    <result column="verify_info" jdbcType="VARCHAR" property="verifyInfo" />
    <result column="deleted" jdbcType="BIT" property="deleted" />
    <result column="update_time" jdbcType="TIMESTAMP" property="updateTime" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    sale_order_id, customer_id, bind_enterpr_id, is_custom_card, pay_type, discount_on_sale, 
    sum_payable, paid_amount, create_user, create_time, status, verify_user, verify_time, 
    verify_info, deleted, update_time
  </sql>
  <select id="selectByExample" parameterType="com.lx.benefits.bean.entity.card.CardSaleOrderCondition" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from card_sale_order
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
    <if test="limit != null">
      <if test="offset != null">
        limit ${offset}, ${limit}
      </if>
      <if test="offset == null">
        limit ${limit}
      </if>
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from card_sale_order
    where sale_order_id = #{saleOrderId,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from card_sale_order
    where sale_order_id = #{saleOrderId,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.lx.benefits.bean.entity.card.CardSaleOrderCondition">
    delete from card_sale_order
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.lx.benefits.bean.entity.card.CardSaleOrder" useGeneratedKeys="true" keyProperty="saleOrderId">
    insert into card_sale_order (sale_order_id, customer_id, bind_enterpr_id, 
      is_custom_card, pay_type, discount_on_sale, 
      sum_payable, paid_amount, create_user, 
      create_time, status, verify_user, 
      verify_time, verify_info, deleted, 
      update_time)
    values (#{saleOrderId,jdbcType=INTEGER}, #{customerId,jdbcType=BIGINT}, #{bindEnterprId,jdbcType=BIGINT}, 
      #{isCustomCard,jdbcType=TINYINT}, #{payType,jdbcType=INTEGER}, #{discountOnSale,jdbcType=DECIMAL}, 
      #{sumPayable,jdbcType=DECIMAL}, #{paidAmount,jdbcType=DECIMAL}, #{createUser,jdbcType=VARCHAR}, 
      #{createTime,jdbcType=TIMESTAMP}, #{status,jdbcType=INTEGER}, #{verifyUser,jdbcType=VARCHAR}, 
      #{verifyTime,jdbcType=TIMESTAMP}, #{verifyInfo,jdbcType=VARCHAR}, #{deleted,jdbcType=BIT}, 
      #{updateTime,jdbcType=TIMESTAMP})
  </insert>
  <insert id="insertSelective" parameterType="com.lx.benefits.bean.entity.card.CardSaleOrder" useGeneratedKeys="true" keyProperty="saleOrderId">
    insert into card_sale_order
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="saleOrderId != null">
        sale_order_id,
      </if>
      <if test="customerId != null">
        customer_id,
      </if>
      <if test="bindEnterprId != null">
        bind_enterpr_id,
      </if>
      <if test="isCustomCard != null">
        is_custom_card,
      </if>
      <if test="payType != null">
        pay_type,
      </if>
      <if test="discountOnSale != null">
        discount_on_sale,
      </if>
      <if test="sumPayable != null">
        sum_payable,
      </if>
      <if test="paidAmount != null">
        paid_amount,
      </if>
      <if test="createUser != null">
        create_user,
      </if>
      <if test="createTime != null">
        create_time,
      </if>
      <if test="status != null">
        status,
      </if>
      <if test="verifyUser != null">
        verify_user,
      </if>
      <if test="verifyTime != null">
        verify_time,
      </if>
      <if test="verifyInfo != null">
        verify_info,
      </if>
      <if test="deleted != null">
        deleted,
      </if>
      <if test="updateTime != null">
        update_time,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="saleOrderId != null">
        #{saleOrderId,jdbcType=INTEGER},
      </if>
      <if test="customerId != null">
        #{customerId,jdbcType=BIGINT},
      </if>
      <if test="bindEnterprId != null">
        #{bindEnterprId,jdbcType=BIGINT},
      </if>
      <if test="isCustomCard != null">
        #{isCustomCard,jdbcType=TINYINT},
      </if>
      <if test="payType != null">
        #{payType,jdbcType=INTEGER},
      </if>
      <if test="discountOnSale != null">
        #{discountOnSale,jdbcType=DECIMAL},
      </if>
      <if test="sumPayable != null">
        #{sumPayable,jdbcType=DECIMAL},
      </if>
      <if test="paidAmount != null">
        #{paidAmount,jdbcType=DECIMAL},
      </if>
      <if test="createUser != null">
        #{createUser,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null">
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="status != null">
        #{status,jdbcType=INTEGER},
      </if>
      <if test="verifyUser != null">
        #{verifyUser,jdbcType=VARCHAR},
      </if>
      <if test="verifyTime != null">
        #{verifyTime,jdbcType=TIMESTAMP},
      </if>
      <if test="verifyInfo != null">
        #{verifyInfo,jdbcType=VARCHAR},
      </if>
      <if test="deleted != null">
        #{deleted,jdbcType=BIT},
      </if>
      <if test="updateTime != null">
        #{updateTime,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.lx.benefits.bean.entity.card.CardSaleOrderCondition" resultType="java.lang.Long">
    select count(*) from card_sale_order
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update card_sale_order
    <set>
      <if test="record.saleOrderId != null">
        sale_order_id = #{record.saleOrderId,jdbcType=INTEGER},
      </if>
      <if test="record.customerId != null">
        customer_id = #{record.customerId,jdbcType=BIGINT},
      </if>
      <if test="record.bindEnterprId != null">
        bind_enterpr_id = #{record.bindEnterprId,jdbcType=BIGINT},
      </if>
      <if test="record.isCustomCard != null">
        is_custom_card = #{record.isCustomCard,jdbcType=TINYINT},
      </if>
      <if test="record.payType != null">
        pay_type = #{record.payType,jdbcType=INTEGER},
      </if>
      <if test="record.discountOnSale != null">
        discount_on_sale = #{record.discountOnSale,jdbcType=DECIMAL},
      </if>
      <if test="record.sumPayable != null">
        sum_payable = #{record.sumPayable,jdbcType=DECIMAL},
      </if>
      <if test="record.paidAmount != null">
        paid_amount = #{record.paidAmount,jdbcType=DECIMAL},
      </if>
      <if test="record.createUser != null">
        create_user = #{record.createUser,jdbcType=VARCHAR},
      </if>
      <if test="record.createTime != null">
        create_time = #{record.createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.status != null">
        status = #{record.status,jdbcType=INTEGER},
      </if>
      <if test="record.verifyUser != null">
        verify_user = #{record.verifyUser,jdbcType=VARCHAR},
      </if>
      <if test="record.verifyTime != null">
        verify_time = #{record.verifyTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.verifyInfo != null">
        verify_info = #{record.verifyInfo,jdbcType=VARCHAR},
      </if>
      <if test="record.deleted != null">
        deleted = #{record.deleted,jdbcType=BIT},
      </if>
      <if test="record.updateTime != null">
        update_time = #{record.updateTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update card_sale_order
    set sale_order_id = #{record.saleOrderId,jdbcType=INTEGER},
      customer_id = #{record.customerId,jdbcType=BIGINT},
      bind_enterpr_id = #{record.bindEnterprId,jdbcType=BIGINT},
      is_custom_card = #{record.isCustomCard,jdbcType=TINYINT},
      pay_type = #{record.payType,jdbcType=INTEGER},
      discount_on_sale = #{record.discountOnSale,jdbcType=DECIMAL},
      sum_payable = #{record.sumPayable,jdbcType=DECIMAL},
      paid_amount = #{record.paidAmount,jdbcType=DECIMAL},
      create_user = #{record.createUser,jdbcType=VARCHAR},
      create_time = #{record.createTime,jdbcType=TIMESTAMP},
      status = #{record.status,jdbcType=INTEGER},
      verify_user = #{record.verifyUser,jdbcType=VARCHAR},
      verify_time = #{record.verifyTime,jdbcType=TIMESTAMP},
      verify_info = #{record.verifyInfo,jdbcType=VARCHAR},
      deleted = #{record.deleted,jdbcType=BIT},
      update_time = #{record.updateTime,jdbcType=TIMESTAMP}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.lx.benefits.bean.entity.card.CardSaleOrder">
    update card_sale_order
    <set>
      <if test="customerId != null">
        customer_id = #{customerId,jdbcType=BIGINT},
      </if>
      <if test="bindEnterprId != null">
        bind_enterpr_id = #{bindEnterprId,jdbcType=BIGINT},
      </if>
      <if test="isCustomCard != null">
        is_custom_card = #{isCustomCard,jdbcType=TINYINT},
      </if>
      <if test="payType != null">
        pay_type = #{payType,jdbcType=INTEGER},
      </if>
      <if test="discountOnSale != null">
        discount_on_sale = #{discountOnSale,jdbcType=DECIMAL},
      </if>
      <if test="sumPayable != null">
        sum_payable = #{sumPayable,jdbcType=DECIMAL},
      </if>
      <if test="paidAmount != null">
        paid_amount = #{paidAmount,jdbcType=DECIMAL},
      </if>
      <if test="createUser != null">
        create_user = #{createUser,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null">
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="status != null">
        status = #{status,jdbcType=INTEGER},
      </if>
      <if test="verifyUser != null">
        verify_user = #{verifyUser,jdbcType=VARCHAR},
      </if>
      <if test="verifyTime != null">
        verify_time = #{verifyTime,jdbcType=TIMESTAMP},
      </if>
      <if test="verifyInfo != null">
        verify_info = #{verifyInfo,jdbcType=VARCHAR},
      </if>
      <if test="deleted != null">
        deleted = #{deleted,jdbcType=BIT},
      </if>
      <if test="updateTime != null">
        update_time = #{updateTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    where sale_order_id = #{saleOrderId,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.lx.benefits.bean.entity.card.CardSaleOrder">
    update card_sale_order
    set customer_id = #{customerId,jdbcType=BIGINT},
      bind_enterpr_id = #{bindEnterprId,jdbcType=BIGINT},
      is_custom_card = #{isCustomCard,jdbcType=TINYINT},
      pay_type = #{payType,jdbcType=INTEGER},
      discount_on_sale = #{discountOnSale,jdbcType=DECIMAL},
      sum_payable = #{sumPayable,jdbcType=DECIMAL},
      paid_amount = #{paidAmount,jdbcType=DECIMAL},
      create_user = #{createUser,jdbcType=VARCHAR},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      status = #{status,jdbcType=INTEGER},
      verify_user = #{verifyUser,jdbcType=VARCHAR},
      verify_time = #{verifyTime,jdbcType=TIMESTAMP},
      verify_info = #{verifyInfo,jdbcType=VARCHAR},
      deleted = #{deleted,jdbcType=BIT},
      update_time = #{updateTime,jdbcType=TIMESTAMP}
    where sale_order_id = #{saleOrderId,jdbcType=INTEGER}
  </update>
</mapper>