<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.lx.benefits.mapper.card.CardPayRecordMapper">
  <resultMap id="BaseResultMap" type="com.lx.benefits.bean.entity.card.CardPayRecord">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="sale_order_id" jdbcType="INTEGER" property="saleOrderId" />
    <result column="pay_amount" jdbcType="DECIMAL" property="payAmount" />
    <result column="pay_voucher" jdbcType="VARCHAR" property="payVoucher" />
    <result column="remark" jdbcType="VARCHAR" property="remark" />
    <result column="pay_time" jdbcType="DATE" property="payTime" />
    <result column="create_user" jdbcType="VARCHAR" property="createUser" />
    <result column="create_time" jdbcType="TIMESTAMP" property="createTime" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    id, sale_order_id, pay_amount, pay_voucher, remark, pay_time, create_user, create_time
  </sql>
  <select id="selectByExample" parameterType="com.lx.benefits.bean.entity.card.CardPayRecordCondition" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from card_pay_record
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
    <if test="limit != null">
      <if test="offset != null">
        limit ${offset}, ${limit}
      </if>
      <if test="offset == null">
        limit ${limit}
      </if>
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from card_pay_record
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from card_pay_record
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.lx.benefits.bean.entity.card.CardPayRecordCondition">
    delete from card_pay_record
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.lx.benefits.bean.entity.card.CardPayRecord">
    insert into card_pay_record (id, sale_order_id, pay_amount, 
      pay_voucher, remark, pay_time, 
      create_user, create_time)
    values (#{id,jdbcType=INTEGER}, #{saleOrderId,jdbcType=INTEGER}, #{payAmount,jdbcType=DECIMAL}, 
      #{payVoucher,jdbcType=VARCHAR}, #{remark,jdbcType=VARCHAR}, #{payTime,jdbcType=DATE}, 
      #{createUser,jdbcType=VARCHAR}, #{createTime,jdbcType=TIMESTAMP})
  </insert>
  <insert id="insertSelective" parameterType="com.lx.benefits.bean.entity.card.CardPayRecord">
    insert into card_pay_record
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="saleOrderId != null">
        sale_order_id,
      </if>
      <if test="payAmount != null">
        pay_amount,
      </if>
      <if test="payVoucher != null">
        pay_voucher,
      </if>
      <if test="remark != null">
        remark,
      </if>
      <if test="payTime != null">
        pay_time,
      </if>
      <if test="createUser != null">
        create_user,
      </if>
      <if test="createTime != null">
        create_time,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=INTEGER},
      </if>
      <if test="saleOrderId != null">
        #{saleOrderId,jdbcType=INTEGER},
      </if>
      <if test="payAmount != null">
        #{payAmount,jdbcType=DECIMAL},
      </if>
      <if test="payVoucher != null">
        #{payVoucher,jdbcType=VARCHAR},
      </if>
      <if test="remark != null">
        #{remark,jdbcType=VARCHAR},
      </if>
      <if test="payTime != null">
        #{payTime,jdbcType=DATE},
      </if>
      <if test="createUser != null">
        #{createUser,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null">
        #{createTime,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.lx.benefits.bean.entity.card.CardPayRecordCondition" resultType="java.lang.Long">
    select count(*) from card_pay_record
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update card_pay_record
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.saleOrderId != null">
        sale_order_id = #{record.saleOrderId,jdbcType=INTEGER},
      </if>
      <if test="record.payAmount != null">
        pay_amount = #{record.payAmount,jdbcType=DECIMAL},
      </if>
      <if test="record.payVoucher != null">
        pay_voucher = #{record.payVoucher,jdbcType=VARCHAR},
      </if>
      <if test="record.remark != null">
        remark = #{record.remark,jdbcType=VARCHAR},
      </if>
      <if test="record.payTime != null">
        pay_time = #{record.payTime,jdbcType=DATE},
      </if>
      <if test="record.createUser != null">
        create_user = #{record.createUser,jdbcType=VARCHAR},
      </if>
      <if test="record.createTime != null">
        create_time = #{record.createTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update card_pay_record
    set id = #{record.id,jdbcType=INTEGER},
      sale_order_id = #{record.saleOrderId,jdbcType=INTEGER},
      pay_amount = #{record.payAmount,jdbcType=DECIMAL},
      pay_voucher = #{record.payVoucher,jdbcType=VARCHAR},
      remark = #{record.remark,jdbcType=VARCHAR},
      pay_time = #{record.payTime,jdbcType=DATE},
      create_user = #{record.createUser,jdbcType=VARCHAR},
      create_time = #{record.createTime,jdbcType=TIMESTAMP}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.lx.benefits.bean.entity.card.CardPayRecord">
    update card_pay_record
    <set>
      <if test="saleOrderId != null">
        sale_order_id = #{saleOrderId,jdbcType=INTEGER},
      </if>
      <if test="payAmount != null">
        pay_amount = #{payAmount,jdbcType=DECIMAL},
      </if>
      <if test="payVoucher != null">
        pay_voucher = #{payVoucher,jdbcType=VARCHAR},
      </if>
      <if test="remark != null">
        remark = #{remark,jdbcType=VARCHAR},
      </if>
      <if test="payTime != null">
        pay_time = #{payTime,jdbcType=DATE},
      </if>
      <if test="createUser != null">
        create_user = #{createUser,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null">
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.lx.benefits.bean.entity.card.CardPayRecord">
    update card_pay_record
    set sale_order_id = #{saleOrderId,jdbcType=INTEGER},
      pay_amount = #{payAmount,jdbcType=DECIMAL},
      pay_voucher = #{payVoucher,jdbcType=VARCHAR},
      remark = #{remark,jdbcType=VARCHAR},
      pay_time = #{payTime,jdbcType=DATE},
      create_user = #{createUser,jdbcType=VARCHAR},
      create_time = #{createTime,jdbcType=TIMESTAMP}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>