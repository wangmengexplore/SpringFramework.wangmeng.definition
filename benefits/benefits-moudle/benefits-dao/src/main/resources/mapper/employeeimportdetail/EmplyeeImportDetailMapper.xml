<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.lx.benefits.mapper.employeeimportdetail.EmplyeeImportDetailMapper">
  <resultMap id="BaseResultMap" type="com.lx.benefits.bean.entity.employeeimportdetail.EmplyeeImportDetail">
    <id column="detailId" jdbcType="BIGINT" property="detailId" />
    <result column="importId" jdbcType="BIGINT" property="importId" />
    <result column="employeeId" jdbcType="BIGINT" property="employeeId" />
    <result column="isDeleted" jdbcType="INTEGER" property="isDeleted" />
    <result column="created" jdbcType="INTEGER" property="created" />
    <result column="updated" jdbcType="INTEGER" property="updated" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    detailId, importId, employeeId, isDeleted, created, updated
  </sql>
  <select id="selectByExample" parameterType="com.lx.benefits.bean.entity.employeeimportdetail.EmplyeeImportDetailExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from  employee_import_detail
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
    <if test="page != null and pageSize != null">
      LIMIT #{page}, #{pageSize}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from  employee_import_detail
    where detailId = #{detailId,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
    delete from  employee_import_detail
    where detailId = #{detailId,jdbcType=BIGINT}
  </delete>
  <delete id="deleteByExample" parameterType="com.lx.benefits.bean.entity.employeeimportdetail.EmplyeeImportDetailExample">
    delete from  employee_import_detail
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.lx.benefits.bean.entity.employeeimportdetail.EmplyeeImportDetail">
    insert into  employee_import_detail (detailId, importId, employeeId, 
      isDeleted, created, updated
      )
    values (#{detailId,jdbcType=BIGINT}, #{importId,jdbcType=BIGINT}, #{employeeId,jdbcType=BIGINT}, 
      #{isDeleted,jdbcType=INTEGER}, #{created,jdbcType=INTEGER}, #{updated,jdbcType=INTEGER}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.lx.benefits.bean.entity.employeeimportdetail.EmplyeeImportDetail">
    insert into  employee_import_detail
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="detailId != null">
        detailId,
      </if>
      <if test="importId != null">
        importId,
      </if>
      <if test="employeeId != null">
        employeeId,
      </if>
      <if test="isDeleted != null">
        isDeleted,
      </if>
      <if test="created != null">
        created,
      </if>
      <if test="updated != null">
        updated,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="detailId != null">
        #{detailId,jdbcType=BIGINT},
      </if>
      <if test="importId != null">
        #{importId,jdbcType=BIGINT},
      </if>
      <if test="employeeId != null">
        #{employeeId,jdbcType=BIGINT},
      </if>
      <if test="isDeleted != null">
        #{isDeleted,jdbcType=INTEGER},
      </if>
      <if test="created != null">
        #{created,jdbcType=INTEGER},
      </if>
      <if test="updated != null">
        #{updated,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>



  <!-- 批量插入员工信息 -->
  <insert id="batchInsert" parameterType="java.util.List" useGeneratedKeys="true" keyProperty="id">
    INSERT INTO employee_import_detail(importId, employeeId, created, updated) VALUES
    <foreach collection="emplyeeImportDetailList" item="emplyeeImportDetail" index="index" separator=",">
      (#{emplyeeImportDetail.importId}, #{emplyeeImportDetail.employeeId}, UNIX_TIMESTAMP(NOW()), UNIX_TIMESTAMP(NOW()))
    </foreach>
  </insert>
  
  
  
  <select id="countByExample" parameterType="com.lx.benefits.bean.entity.employeeimportdetail.EmplyeeImportDetailExample" resultType="java.lang.Integer">
    select count(*) from  employee_import_detail
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update  employee_import_detail
    <set>
      <if test="record.detailId != null">
        detailId = #{record.detailId,jdbcType=BIGINT},
      </if>
      <if test="record.importId != null">
        importId = #{record.importId,jdbcType=BIGINT},
      </if>
      <if test="record.employeeId != null">
        employeeId = #{record.employeeId,jdbcType=BIGINT},
      </if>
      <if test="record.isDeleted != null">
        isDeleted = #{record.isDeleted,jdbcType=INTEGER},
      </if>
      <if test="record.created != null">
        created = #{record.created,jdbcType=INTEGER},
      </if>
      <if test="record.updated != null">
        updated = #{record.updated,jdbcType=INTEGER},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update  employee_import_detail
    set detailId = #{record.detailId,jdbcType=BIGINT},
      importId = #{record.importId,jdbcType=BIGINT},
      employeeId = #{record.employeeId,jdbcType=BIGINT},
      isDeleted = #{record.isDeleted,jdbcType=INTEGER},
      created = #{record.created,jdbcType=INTEGER},
      updated = #{record.updated,jdbcType=INTEGER}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.lx.benefits.bean.entity.employeeimportdetail.EmplyeeImportDetail">
    update  employee_import_detail
    <set>
      <if test="importId != null">
        importId = #{importId,jdbcType=BIGINT},
      </if>
      <if test="employeeId != null">
        employeeId = #{employeeId,jdbcType=BIGINT},
      </if>
      <if test="isDeleted != null">
        isDeleted = #{isDeleted,jdbcType=INTEGER},
      </if>
      <if test="created != null">
        created = #{created,jdbcType=INTEGER},
      </if>
      <if test="updated != null">
        updated = #{updated,jdbcType=INTEGER},
      </if>
    </set>
    where detailId = #{detailId,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.lx.benefits.bean.entity.employeeimportdetail.EmplyeeImportDetail">
    update  employee_import_detail
    set importId = #{importId,jdbcType=BIGINT},
      employeeId = #{employeeId,jdbcType=BIGINT},
      isDeleted = #{isDeleted,jdbcType=INTEGER},
      created = #{created,jdbcType=INTEGER},
      updated = #{updated,jdbcType=INTEGER}
    where detailId = #{detailId,jdbcType=BIGINT}
  </update>
</mapper>