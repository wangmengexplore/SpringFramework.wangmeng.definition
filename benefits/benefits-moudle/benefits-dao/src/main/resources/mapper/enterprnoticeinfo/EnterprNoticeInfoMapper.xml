<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.lx.benefits.mapper.enterprnoticeinfo.EnterprNoticeInfoMapper">
  <resultMap id="BaseResultMap" type="com.lx.benefits.bean.entity.enterprnoticeinfo.EnterprNoticeInfo">
    <id column="id" jdbcType="BIGINT" property="id" />
    <result column="enterprId" jdbcType="BIGINT" property="enterprId" />
    <result column="isLoginRemind" jdbcType="BIT" property="isLoginRemind" />
    <result column="loginAttach" jdbcType="VARCHAR" property="loginAttach" />
    <result column="isUserRemind" jdbcType="BIT" property="isUserRemind" />
    <result column="userAttach" jdbcType="VARCHAR" property="userAttach" />
    <result column="isDeleted" jdbcType="BIT" property="isDeleted" />
    <result column="created" jdbcType="INTEGER" property="created" />
    <result column="updated" jdbcType="INTEGER" property="updated" />
    <result column="type" jdbcType="INTEGER" property="type" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    id, enterprId, isLoginRemind, loginAttach, isUserRemind, userAttach, isDeleted, created, updated,type
  </sql>
  <select id="selectByExample" parameterType="com.lx.benefits.bean.entity.enterprnoticeinfo.EnterprNoticeInfoExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from  enterpr_notice_info
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from  enterpr_notice_info
    where id = #{id,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
    delete from  enterpr_notice_info
    where id = #{id,jdbcType=BIGINT}
  </delete>
  <delete id="deleteByExample" parameterType="com.lx.benefits.bean.entity.enterprnoticeinfo.EnterprNoticeInfoExample">
    delete from  enterpr_notice_info
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>

  <insert id="insertSelective" useGeneratedKeys="true" keyProperty="id" parameterType="com.lx.benefits.bean.entity.enterprnoticeinfo.EnterprNoticeInfo">
    insert into  enterpr_notice_info
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="enterprId != null">
        enterprId,
      </if>
      <if test="isLoginRemind != null">
        isLoginRemind,
      </if>
      <if test="loginAttach != null">
        loginAttach,
      </if>
      <if test="isUserRemind != null">
        isUserRemind,
      </if>
      <if test="userAttach != null">
        userAttach,
      </if>
      <if test="isDeleted != null">
        isDeleted,
      </if>
      <if test="type != null">
        type,
      </if>
        created,updated
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=BIGINT},
      </if>
      <if test="enterprId != null">
        #{enterprId,jdbcType=BIGINT},
      </if>
      <if test="isLoginRemind != null">
        #{isLoginRemind,jdbcType=BIT},
      </if>
      <if test="loginAttach != null">
        #{loginAttach,jdbcType=VARCHAR},
      </if>
      <if test="isUserRemind != null">
        #{isUserRemind,jdbcType=BIT},
      </if>
      <if test="userAttach != null">
        #{userAttach,jdbcType=VARCHAR},
      </if>
      <if test="isDeleted != null">
        #{isDeleted,jdbcType=BIT},
      </if>
      <if test="created != null">
        #{created,jdbcType=INTEGER},
      </if>
      <if test="updated != null">
        #{updated,jdbcType=INTEGER},
      </if>
      <if test="type != null">
        #{type,jdbcType=INTEGER},
      </if>
      UNIX_TIMESTAMP(NOW()), UNIX_TIMESTAMP(NOW())
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.lx.benefits.bean.entity.enterprnoticeinfo.EnterprNoticeInfoExample" resultType="java.lang.Integer">
    select count(*) from  enterpr_notice_info
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update  enterpr_notice_info
    <set>
      <if test="record.isLoginRemind != null">
        isLoginRemind = #{record.isLoginRemind,jdbcType=BIT},
      </if>
      <if test="record.loginAttach != null">
        loginAttach = #{record.loginAttach,jdbcType=VARCHAR},
      </if>
      <if test="record.isUserRemind != null">
        isUserRemind = #{record.isUserRemind,jdbcType=BIT},
      </if>
      <if test="record.userAttach != null">
        userAttach = #{record.userAttach,jdbcType=VARCHAR},
      </if>
      <if test="record.isDeleted != null">
        isDeleted = #{record.isDeleted,jdbcType=BIT},
      </if>
      <if test="record.created != null">
        created = #{record.created,jdbcType=INTEGER},
      </if>
      <if test="record.updated != null">
        updated = #{record.updated,jdbcType=INTEGER},
      </if>
      <if test="record.type != null">
        type = #{record.type,jdbcType=INTEGER},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>

  <update id="updateByPrimaryKeySelective" parameterType="com.lx.benefits.bean.entity.enterprnoticeinfo.EnterprNoticeInfo">
    update  enterpr_notice_info
    <set>
      <if test="isLoginRemind != null">
        isLoginRemind = #{isLoginRemind,jdbcType=BIT},
      </if>
      <if test="loginAttach != null">
        loginAttach = #{loginAttach,jdbcType=VARCHAR},
      </if>
      <if test="isUserRemind != null">
        isUserRemind = #{isUserRemind,jdbcType=BIT},
      </if>
      <if test="userAttach != null">
        userAttach = #{userAttach,jdbcType=VARCHAR},
      </if>
      <if test="isDeleted != null">
        isDeleted = #{isDeleted,jdbcType=BIT},
      </if>
      <if test="created != null">
        created = #{created,jdbcType=INTEGER},
      </if>
      <if test="type != null">
        type = #{type,jdbcType=INTEGER},
      </if>
      updated = UNIX_TIMESTAMP(NOW())
    </set>
    where id = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateEmail" parameterType="com.lx.benefits.bean.dto.admin.customized.EnterprNoticeReqDto">
  update enterpr_email 
  set is_Birthday_Email_Remind = #{isBirthdayEmailRemind},
  title = #{emailTitle},
  content = #{emailContent}, 
  update_time = now()
  where enterprId = #{enterprId}
  </update>
  
  <insert id="insertEmail" parameterType="com.lx.benefits.bean.dto.admin.customized.EnterprNoticeReqDto">
  insert into enterpr_email (enterprId,is_Birthday_Email_Remind,title,content,create_time)
  values(#{enterprId},#{isBirthdayEmailRemind},#{emailTitle},#{emailContent},now())
  </insert>
  
  <select id="findEmailDetail" parameterType="java.lang.Long" resultType="com.lx.benefits.bean.dto.admin.customized.EnterprNoticeReqDto">
  select enterprId,title as emailTitle,content as emailContent,is_BirthDay_Email_Remind as isBirthdayEmailRemind from enterpr_email where enterprId = #{enterprId} limit 1
  </select>
</mapper>