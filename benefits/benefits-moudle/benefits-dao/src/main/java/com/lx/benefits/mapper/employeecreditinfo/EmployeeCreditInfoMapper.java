package com.lx.benefits.mapper.employeecreditinfo;

import com.lx.benefits.bean.dto.enterpriseadmin.credit.EmployeeCreditResDto;
import com.lx.benefits.bean.entity.employeecreditinfo.EmployeeCreditInfo;
import com.lx.benefits.bean.entity.employeecreditinfo.EmployeeCreditInfoExample;
import com.lx.benefits.bean.entity.employeecreditinfo.EmployeeCreditOperateDto;
import org.apache.ibatis.annotations.Param;

import java.math.BigDecimal;
import java.util.List;
import java.util.Map;

/**
 * 员工积分
 *
 * @author luojie
 */
public interface EmployeeCreditInfoMapper {
    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table employee_credit_info
     *
     * @mbggenerated Tue Dec 18 03:09:33 CST 2018
     */
    int countByExample(EmployeeCreditInfoExample example);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table employee_credit_info
     *
     * @mbggenerated Tue Dec 18 03:09:33 CST 2018
     */
    int deleteByExample(EmployeeCreditInfoExample example);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table employee_credit_info
     *
     * @mbggenerated Tue Dec 18 03:09:33 CST 2018
     */
    int deleteByPrimaryKey(Long creditId);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table employee_credit_info
     *
     * @mbggenerated Tue Dec 18 03:09:33 CST 2018
     */
    int insert(EmployeeCreditInfo record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table employee_credit_info
     *
     * @mbggenerated Tue Dec 18 03:09:33 CST 2018
     */
    int insertSelective(EmployeeCreditInfo record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table employee_credit_info
     *
     * @mbggenerated Tue Dec 18 03:09:33 CST 2018
     */
    List<EmployeeCreditInfo> selectByExample(EmployeeCreditInfoExample example);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table employee_credit_info
     *
     * @mbggenerated Tue Dec 18 03:09:33 CST 2018
     */
    EmployeeCreditInfo selectByPrimaryKey(Long creditId);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table employee_credit_info
     *
     * @mbggenerated Tue Dec 18 03:09:33 CST 2018
     */
    int updateByExampleSelective(@Param("record") EmployeeCreditInfo record, @Param("example") EmployeeCreditInfoExample example);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table employee_credit_info
     *
     * @mbggenerated Tue Dec 18 03:09:33 CST 2018
     */
    int updateByExample(@Param("record") EmployeeCreditInfo record, @Param("example") EmployeeCreditInfoExample example);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table employee_credit_info
     *
     * @mbggenerated Tue Dec 18 03:09:33 CST 2018
     */
    int updateByPrimaryKeySelective(EmployeeCreditInfo record);

    int updateByEmployeeIdSelective(EmployeeCreditInfo record);

    int updateGrainIdByEmployeeIdSelective(EmployeeCreditInfo employeeCreditInfo);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table employee_credit_info
     *
     * @mbggenerated Tue Dec 18 03:09:33 CST 2018
     */
    int updateByPrimaryKey(EmployeeCreditInfo record);

    EmployeeCreditInfo getByEmployeeIdAndGrainId(EmployeeCreditInfo employeeCreditInfo);


    int updateEmployeeCreditInfoAddCredit(EmployeeCreditInfo info);

    List<EmployeeCreditInfo> findEmployeeCreditInfoListByEnterPrId(Long enterPrId);

    int updateEmployeeCreditInfoReduceCredit(EmployeeCreditInfo info);

    /**
     * 用户积分变动 - 交易
     * @param info
     * @return
     */
    int updateEmployeeCreditInfo4Order(EmployeeCreditInfo info);


    List<EmployeeCreditInfo> listByEmployeeIdListAndCreditType(@Param("employeeIdList") List<Long> employeeIdList,
                                                               @Param("creditType") Integer creditType);

    List<EmployeeCreditInfo> listByEmployeeIdListAndCampaignId(@Param("employeeIdList") List<Long> employeeIdList,
                                                               @Param("campaignId") Long campaignId);


    EmployeeCreditInfo selectEmployeeCreditInfo(@Param("employeeId") Long employeeId,@Param("campaignId") Long campaignId);

    /**
     * 统计员工积分（普通积分、节日积分）
     * @param employeeIdList
     * @param creditType
     * @return
     */
    List<EmployeeCreditInfo> totalCreaditByParam(@Param("employeeIdList") List<Long> employeeIdList,
                                                 @Param("creditType") Integer creditType);

    int updateCredit(EmployeeCreditOperateDto dto);

    List<EmployeeCreditInfo> getUserCreditByMemberId(Long employeeId);

    double selectSumByCampaignId(Long campaignId);

    List<EmployeeCreditResDto> festivalInfo(Long employeeId);

    double selectSumByExample(Map<String,Object> map);

    int updateEmployeeCredit(EmployeeCreditInfo info);
    
    BigDecimal  inventoryCredit(@Param("enterprId") Long enterprId);
    
    BigDecimal  generalCredit(@Param("enterprId") Long enterprId);
    
    BigDecimal  festivalCredit(@Param("enterprId") Long enterprId);
    
    List<EmployeeCreditInfo> employeeGeneralCredit(@Param("enterprId") Long enterprId);
    
    List<EmployeeCreditInfo> employeeFestivalCredit(@Param("enterprId") Long enterprId);
    
    List<EmployeeCreditInfo> queryGeneralCredit(@Param("employeeIdList") List<Long> employeeIdList);
    
    List<EmployeeCreditInfo> queryFestivalCredit(@Param("employeeIdList") List<Long> employeeIdList);
}